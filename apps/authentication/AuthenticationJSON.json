[
    {
        "id": "26049191ec4ff1a9",
        "type": "uibuilder",
        "z": "7a59dd7e4a424c38",
        "name": "",
        "topic": "",
        "url": "login",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "6.1.1",
        "showMsgUib": false,
        "x": 295,
        "y": 320,
        "wires": [
            [
                "6bc515b325516468"
            ],
            [
                "d57063a1a971461e"
            ]
        ]
    },
    {
        "id": "6bc515b325516468",
        "type": "switch",
        "z": "7a59dd7e4a424c38",
        "name": "",
        "property": "auth.URL",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/register",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/login",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 645,
        "y": 320,
        "wires": [
            [
                "5d300811a9e95d22"
            ],
            [
                "eb4629a3572bbbee"
            ]
        ]
    },
    {
        "id": "5167606f0b4d2beb",
        "type": "function",
        "z": "7a59dd7e4a424c38",
        "name": "function 17",
        "func": "var clientId = msg.clientId\nvar socket = msg._socketId\nmsg = {}\nmsg._socketId = socket\nmsg.clientId = clientId\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1065,
        "y": 100,
        "wires": [
            [
                "c9b97ef46bdf07c2"
            ]
        ]
    },
    {
        "id": "c9b97ef46bdf07c2",
        "type": "change",
        "z": "7a59dd7e4a424c38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"services\":[{\"name\":\"GXUI\",\"URL\":\"/GXUI\"},{\"name\":\"Labeling Wizard\",\"URL\":\"/wizard\"}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1395,
        "y": 100,
        "wires": [
            [
                "e2d6fa1837e588b2"
            ]
        ]
    },
    {
        "id": "e2a95a02a7eb92d5",
        "type": "link in",
        "z": "7a59dd7e4a424c38",
        "name": "Login/Register Input",
        "links": [
            "cb52fa8a2a146b40",
            "6f411f88fa5bca3c",
            "625198fb456b763f",
            "7f6bbace0f0e2fec"
        ],
        "x": 102.5,
        "y": 340,
        "wires": [
            [
                "26049191ec4ff1a9"
            ]
        ]
    },
    {
        "id": "74c63cb9de55b00b",
        "type": "link in",
        "z": "7a59dd7e4a424c38",
        "name": "link in 30",
        "links": [
            "d57063a1a971461e"
        ],
        "x": 872.5,
        "y": 100,
        "wires": [
            [
                "5167606f0b4d2beb"
            ]
        ]
    },
    {
        "id": "d57063a1a971461e",
        "type": "link out",
        "z": "7a59dd7e4a424c38",
        "name": "link out 33",
        "mode": "link",
        "links": [
            "74c63cb9de55b00b"
        ],
        "x": 472.5,
        "y": 460,
        "wires": []
    },
    {
        "id": "1e8bbf875246b979",
        "type": "link in",
        "z": "7a59dd7e4a424c38",
        "name": "link in 31",
        "links": [
            "e2d6fa1837e588b2",
            "1edc609eb51d088f"
        ],
        "x": 102.5,
        "y": 280,
        "wires": [
            [
                "26049191ec4ff1a9"
            ]
        ]
    },
    {
        "id": "e2d6fa1837e588b2",
        "type": "link out",
        "z": "7a59dd7e4a424c38",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "1e8bbf875246b979"
        ],
        "x": 1592.5,
        "y": 100,
        "wires": []
    },
    {
        "id": "3c95238b8f9d5912",
        "type": "link in",
        "z": "7a59dd7e4a424c38",
        "name": "link in 33",
        "links": [
            "092af869ce49a153"
        ],
        "x": 102.5,
        "y": 400,
        "wires": [
            [
                "26049191ec4ff1a9"
            ]
        ]
    },
    {
        "id": "eb4629a3572bbbee",
        "type": "link out",
        "z": "7a59dd7e4a424c38",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "49f80da71a0eae39",
            "0103ddd322a213df"
        ],
        "x": 807.5,
        "y": 420,
        "wires": []
    },
    {
        "id": "8f2f7aada84d6eb8",
        "type": "group",
        "z": "7a59dd7e4a424c38",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0f81f45efae8caf6",
            "c365f27a22368989",
            "5d8ffce034ea4ad5",
            "3c0871bce3b959e3",
            "83645bb92e266d3d",
            "040433e8d812160f",
            "6032a1f35082fbad",
            "0103ddd322a213df",
            "a7dce0262de87713",
            "1799a8bdc4d6897b",
            "64688cc8b89aeb6f",
            "c7fb197e3d9b4d0d",
            "625198fb456b763f",
            "d53e1ca217aaf488",
            "08a76760bcfe0a67",
            "47cf97bf642f2c8d",
            "5c0af3a4300aad73",
            "104847c435d28c3f",
            "d193db0a4f5c8e36",
            "7eddd6a0cd6738fa",
            "dcd74552857051bb",
            "c08059a68e0b6a33",
            "bf03e05407406782",
            "33e41409128898f8"
        ],
        "x": 864,
        "y": 564,
        "w": 2902,
        "h": 729.5
    },
    {
        "id": "0f81f45efae8caf6",
        "type": "mongodb4",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "clientNode": "e54735180560f6bc",
        "mode": "collection",
        "collection": "",
        "operation": "",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1505,
        "y": 780,
        "wires": [
            [
                "1799a8bdc4d6897b"
            ]
        ]
    },
    {
        "id": "c365f27a22368989",
        "type": "function",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "Find User",
        "func": "msg.collection = \"auth\"\nmsg.operation = \"findOne\"\nconst query = { email: msg.auth.username}\nmsg.payload = [query];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1195,
        "y": 780,
        "wires": [
            [
                "0f81f45efae8caf6"
            ]
        ]
    },
    {
        "id": "5d8ffce034ea4ad5",
        "type": "link out",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "link out 51",
        "mode": "link",
        "links": [
            "3f5e0e77731da8c3"
        ],
        "x": 1737.5,
        "y": 980,
        "wires": []
    },
    {
        "id": "3c0871bce3b959e3",
        "type": "link in",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "link in 38",
        "links": [
            "17e273e1d5654dce"
        ],
        "x": 1937.5,
        "y": 980,
        "wires": [
            [
                "5c0af3a4300aad73"
            ]
        ]
    },
    {
        "id": "83645bb92e266d3d",
        "type": "link out",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "link out 52",
        "mode": "link",
        "links": [
            "35a4bc886944a50d"
        ],
        "x": 1742.5,
        "y": 1080,
        "wires": []
    },
    {
        "id": "040433e8d812160f",
        "type": "link in",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "link in 39",
        "links": [
            "eefeb0eaaec98399"
        ],
        "x": 1937.5,
        "y": 1120,
        "wires": [
            [
                "5c0af3a4300aad73"
            ]
        ]
    },
    {
        "id": "6032a1f35082fbad",
        "type": "switch",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "",
        "property": "auth.uiElementStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "wizard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gxui",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1505,
        "y": 1080,
        "wires": [
            [
                "5d8ffce034ea4ad5"
            ],
            [
                "83645bb92e266d3d"
            ],
            [
                "7eddd6a0cd6738fa"
            ]
        ]
    },
    {
        "id": "0103ddd322a213df",
        "type": "link in",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "link in 40",
        "links": [
            "353410cfbff18238",
            "eb4629a3572bbbee"
        ],
        "x": 917.5,
        "y": 780,
        "wires": [
            [
                "c365f27a22368989"
            ]
        ]
    },
    {
        "id": "a7dce0262de87713",
        "type": "link in",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "link in 41",
        "links": [
            "d53e1ca217aaf488"
        ],
        "x": 922.5,
        "y": 1080,
        "wires": [
            [
                "08a76760bcfe0a67"
            ]
        ]
    },
    {
        "id": "1799a8bdc4d6897b",
        "type": "switch",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1795,
        "y": 800,
        "wires": [
            [
                "dcd74552857051bb"
            ],
            [
                "64688cc8b89aeb6f"
            ]
        ]
    },
    {
        "id": "64688cc8b89aeb6f",
        "type": "change",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "User Not Found",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.auth",
                "pt": "msg",
                "to": "Warning",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.state.title",
                "pt": "msg",
                "to": "Username Not Found",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.state.description",
                "pt": "msg",
                "to": "The username you entered does not exist in our records. Please check for any typos or consider registering if you're a new user.",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.state.warningButton",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2155,
        "y": 900,
        "wires": [
            [
                "625198fb456b763f"
            ]
        ]
    },
    {
        "id": "c7fb197e3d9b4d0d",
        "type": "switch",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "",
        "property": "payload.auth",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "LoginApproved",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Warning",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3445,
        "y": 660,
        "wires": [
            [
                "d53e1ca217aaf488"
            ],
            [
                "625198fb456b763f"
            ]
        ]
    },
    {
        "id": "625198fb456b763f",
        "type": "link out",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "link out 53",
        "mode": "link",
        "links": [
            "e2a95a02a7eb92d5",
            "909a36f8459dde06"
        ],
        "x": 2982.5,
        "y": 900,
        "wires": []
    },
    {
        "id": "d53e1ca217aaf488",
        "type": "link out",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "link out 54",
        "mode": "link",
        "links": [
            "a7dce0262de87713"
        ],
        "x": 3712.5,
        "y": 640,
        "wires": []
    },
    {
        "id": "08a76760bcfe0a67",
        "type": "function",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "function 74",
        "func": "\nif (msg.auth.service.URL.startsWith('/')) {\n    msg.services = msg.auth.service.URL.substring(1);\n}\n\nif (msg.auth.service.URL === \"/wizard\") {\n    if (msg.database.ui && msg.database.ui[msg.services] === undefined) {\n        msg.auth.uiElementStatus = \"wizard\";\n    }\n} else if (msg.auth.service.URL === \"/GXUI\") {\n    if (msg.database.ui && msg.database.ui[msg.services] === undefined) {\n        msg.auth.uiElementStatus = \"gxui\";\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1185,
        "y": 1080,
        "wires": [
            [
                "6032a1f35082fbad"
            ]
        ]
    },
    {
        "id": "47cf97bf642f2c8d",
        "type": "mongodb4",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "clientNode": "e54735180560f6bc",
        "mode": "collection",
        "collection": "",
        "operation": "",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 2515,
        "y": 1060,
        "wires": [
            [
                "104847c435d28c3f"
            ]
        ]
    },
    {
        "id": "5c0af3a4300aad73",
        "type": "function",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "function 81",
        "func": "msg.payload={}\nmsg.collection = \"auth\"; // the name of your collection\nmsg.operation = \"updateOne\";\nconst filter = {email : msg.database.email }\nif (msg.services == \"GXUI\"){\n    const updateDoc = {\n        \"$set\": {\n\n            \"ui.GXUI\": msg.ui,\n            token: msg.auth.token\n\n        }\n    }\n    msg.payload = [filter, updateDoc]\n}\nelse if (msg.services == \"wizard\"){\n    const updateDoc2 = {\n        \"$set\": {\n\n            \"ui.wizard\": msg.ui,\n            token: msg.auth.token\n\n        }\n    }\n    msg.payload = [filter, updateDoc2]\n }\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2215,
        "y": 1060,
        "wires": [
            [
                "47cf97bf642f2c8d"
            ]
        ]
    },
    {
        "id": "104847c435d28c3f",
        "type": "change",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.state.redirectUrl",
                "pt": "msg",
                "to": "auth.service.URL",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "auth",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.auth",
                "pt": "msg",
                "to": "LoginApproved",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2905,
        "y": 1060,
        "wires": [
            [
                "625198fb456b763f"
            ]
        ]
    },
    {
        "id": "d193db0a4f5c8e36",
        "type": "link in",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "link in 42",
        "links": [
            "7eddd6a0cd6738fa"
        ],
        "x": 2622.5,
        "y": 1240,
        "wires": [
            [
                "104847c435d28c3f"
            ]
        ]
    },
    {
        "id": "7eddd6a0cd6738fa",
        "type": "link out",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "link out 57",
        "mode": "link",
        "links": [
            "d193db0a4f5c8e36"
        ],
        "x": 1742.5,
        "y": 1160,
        "wires": []
    },
    {
        "id": "dcd74552857051bb",
        "type": "function",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "function 87",
        "func": "const clone = RED.util.cloneMessage(msg.payload);\nmsg.database = clone;\nmsg.payload = msg.payload.password\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2145,
        "y": 640,
        "wires": [
            [
                "33e41409128898f8"
            ]
        ]
    },
    {
        "id": "c08059a68e0b6a33",
        "type": "function",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "function 88",
        "func": "var password= msg.payload\nmsg.payload ={}\nconst clone = RED.util.cloneMessage(msg.database);\nmsg.payload = clone;\nmsg.payload.password = password\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2845,
        "y": 640,
        "wires": [
            [
                "bf03e05407406782"
            ]
        ]
    },
    {
        "id": "bf03e05407406782",
        "type": "function",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "Check Login Data",
        "func": "\nfunction BKDRHash(str) {\n    const seed = 13131; // 31, 131, 1313, 13131, etc..\n    let hash = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        hash = ((hash * seed) + str.charCodeAt(i)) & 0x7FFFFFFF; // Apply bitmask inside loop to prevent overflow\n    }\n\n    return hash.toString();\n}\n\n\nif (msg.auth.username === msg.payload.email && msg.auth.password === msg.payload.password) {\n\n    msg.payload.auth = \"LoginApproved\";\n    var dataToHash = msg.payload.clientId + msg.payload.email;\n\n    var hash = BKDRHash(dataToHash);\n\n\n    if (!msg.payload.ui) {\n        msg.payload.ui = {};\n    }\n    if (!msg.database.ui) {\n        msg.database.ui = {};\n    }\n\n    msg.payload.state = {}\n    msg.payload.state.redirectUrl = msg.auth.service.URL;\n\n    // msg.payload.state.services =\"GXFS\"\n    msg.payload.service = msg.auth.service;\n    msg.payload.URL = msg.auth.URL\n    msg.auth = msg.payload\n    msg.auth.token = hash;\n    msg.auth.username = msg.payload.email\n\n\n} else {\n    msg.payload.auth = \"Warning\";\n    msg.payload.state = {}\n    msg.payload.state.title = \"Login Failed\"\n    msg.payload.state.description = \"Your username or password is not correct. Please double-check and try again.\"\n    msg.payload.state.warningButton = \"close\"\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3155,
        "y": 640,
        "wires": [
            [
                "c7fb197e3d9b4d0d"
            ]
        ]
    },
    {
        "id": "33e41409128898f8",
        "type": "decrypt",
        "z": "7a59dd7e4a424c38",
        "g": "8f2f7aada84d6eb8",
        "name": "",
        "algorithm": "AES",
        "key": "P@ssw0rdGXFS",
        "x": 2505,
        "y": 640,
        "wires": [
            [
                "c08059a68e0b6a33"
            ]
        ]
    },
    {
        "id": "e54735180560f6bc",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb+srv",
        "hostname": "db-mongodb-leanea-f9f0367b.mongo.ondigitalocean.com",
        "port": "",
        "dbName": "gxfsDB",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": true,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "faf08160e8586086",
        "type": "group",
        "z": "7a59dd7e4a424c38",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "97fd4c8b9f99d34c",
            "5d300811a9e95d22",
            "5360496944ac50d0",
            "bb9fbd2173086d2e",
            "4469deb3fc0d34a4",
            "1edc609eb51d088f",
            "314fbea4ce0846b7",
            "310a5f5c6d5f4ab8",
            "1e4a32ed1b19593a",
            "32c6d8cc3c490432",
            "1626b54e6235e256"
        ],
        "x": 864,
        "y": 124,
        "w": 2892,
        "h": 292
    },
    {
        "id": "97fd4c8b9f99d34c",
        "type": "mongodb4",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "clientNode": "e54735180560f6bc",
        "mode": "collection",
        "collection": "",
        "operation": "",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1295,
        "y": 240,
        "wires": [
            [
                "bb9fbd2173086d2e"
            ]
        ]
    },
    {
        "id": "5d300811a9e95d22",
        "type": "function",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "name": "Get data",
        "func": "msg.collection = \"auth\"\nmsg.operation = \"findOne\"\nconst query = { email : msg.auth.email}\nmsg.payload = [query];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1015,
        "y": 240,
        "wires": [
            [
                "97fd4c8b9f99d34c"
            ]
        ]
    },
    {
        "id": "5360496944ac50d0",
        "type": "mongodb4",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "clientNode": "e54735180560f6bc",
        "mode": "collection",
        "collection": "",
        "operation": "",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 3275,
        "y": 200,
        "wires": [
            [
                "314fbea4ce0846b7"
            ]
        ]
    },
    {
        "id": "bb9fbd2173086d2e",
        "type": "switch",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1585,
        "y": 240,
        "wires": [
            [
                "1e4a32ed1b19593a"
            ],
            [
                "4469deb3fc0d34a4"
            ]
        ]
    },
    {
        "id": "4469deb3fc0d34a4",
        "type": "change",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "name": "Warning",
        "rules": [
            {
                "t": "set",
                "p": "payload.auth",
                "pt": "msg",
                "to": "Warning",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.state.title",
                "pt": "msg",
                "to": "Email Already Registered",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.state.description",
                "pt": "msg",
                "to": "The email address you entered is already associated with an existing account. Please use a different email or log in if you've already registered with this address.",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.state.warningButton",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1915,
        "y": 340,
        "wires": [
            [
                "1edc609eb51d088f"
            ]
        ]
    },
    {
        "id": "1edc609eb51d088f",
        "type": "link out",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "name": "link out 50",
        "mode": "link",
        "links": [
            "1e8bbf875246b979"
        ],
        "x": 2822.5,
        "y": 340,
        "wires": []
    },
    {
        "id": "314fbea4ce0846b7",
        "type": "change",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "name": "Approved",
        "rules": [
            {
                "t": "set",
                "p": "payload.auth",
                "pt": "msg",
                "to": "Approved",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3605,
        "y": 200,
        "wires": [
            [
                "1edc609eb51d088f"
            ]
        ]
    },
    {
        "id": "310a5f5c6d5f4ab8",
        "type": "function",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "name": "Set data",
        "func": "msg.collection = \"auth\"\nmsg.operation = \"insertOne\"\nconst query = msg.auth\nmsg.payload = [query];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2955,
        "y": 200,
        "wires": [
            [
                "5360496944ac50d0"
            ]
        ]
    },
    {
        "id": "1e4a32ed1b19593a",
        "type": "change",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "auth.password",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1945,
        "y": 200,
        "wires": [
            [
                "32c6d8cc3c490432"
            ]
        ]
    },
    {
        "id": "32c6d8cc3c490432",
        "type": "encrypt",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "name": "",
        "algorithm": "AES",
        "key": "P@ssw0rdGXFS",
        "x": 2255,
        "y": 200,
        "wires": [
            [
                "1626b54e6235e256"
            ]
        ]
    },
    {
        "id": "1626b54e6235e256",
        "type": "change",
        "z": "7a59dd7e4a424c38",
        "g": "faf08160e8586086",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "auth.password",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2600,
        "y": 200,
        "wires": [
            [
                "310a5f5c6d5f4ab8"
            ]
        ]
    }
]