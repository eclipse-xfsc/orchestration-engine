[
    {
        "id": "a99f1069b3e1e21d",
        "type": "switch",
        "z": "c89e5e2e6b30c13a",
        "name": "Check Deployment Type",
        "property": "deploymentType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "K8s Deployment",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Repo Deployment",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Docker Container",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2110,
        "y": 1260,
        "wires": [
            [
                "ec34425d4ac90ed8"
            ],
            [
                "11627009907e4058"
            ],
            []
        ]
    },
    {
        "id": "6ff354d8bb72ea2a",
        "type": "link in",
        "z": "c89e5e2e6b30c13a",
        "name": "link in 37",
        "links": [
            "4fd0d2b0be40fc3d",
            "ed1389573c168271",
            "98201cd6759c15c7",
            "d7603e03706ad23d",
            "e63e0aae8aa7ee42",
            "b5dfe8816fd090e1",
            "55dac9538151c188",
            "659fcf10908313b9",
            "e2b3de5543bb515b",
            "716fac964c723cbc"
        ],
        "x": 1647.5,
        "y": 1140,
        "wires": [
            [
                "8d67190288f29ca0"
            ]
        ]
    },
    {
        "id": "8d67190288f29ca0",
        "type": "uibuilder",
        "z": "c89e5e2e6b30c13a",
        "name": "",
        "topic": "",
        "url": "",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "6.1.1",
        "showMsgUib": false,
        "x": 1735,
        "y": 1280,
        "wires": [
            [
                "a99f1069b3e1e21d"
            ],
            []
        ]
    },
    {
        "id": "7f7764c03513154f",
        "type": "group",
        "z": "c89e5e2e6b30c13a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9eaa7eecdc8db97b",
            "0844779b6253fb9c",
            "d2c6b8cc82ec15f9",
            "6e30d3c4d23de648",
            "de694924337e266d",
            "845c9c2650bf5e64",
            "6d442a83c46e63e7",
            "ec34425d4ac90ed8",
            "b6a1f1e62012abf1",
            "16969cf5890e0a36",
            "df79245f4a9a27dd",
            "60d961d803eb5edc",
            "ae23bd3fcf014666",
            "841f65e192783172",
            "a42253e9573183fc",
            "dd0174734327eed0",
            "26b5bad4d239e766",
            "9730f68b96d1eb37",
            "4fd0d2b0be40fc3d",
            "ed1389573c168271",
            "98201cd6759c15c7",
            "d7603e03706ad23d",
            "e63e0aae8aa7ee42"
        ],
        "x": 2454,
        "y": 604,
        "w": 2452,
        "h": 709.5
    },
    {
        "id": "9eaa7eecdc8db97b",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "Make Dir",
        "func": "if (Buffer.isBuffer(msg.kubeConfig.buffer)) {\n    msg.kubeString = msg.kubeConfig.buffer.toString();\n}\nvar fileNameWithoutExtension = msg.kubeConfig.name.replace(/\\.yaml$/, \"\");\nmsg.kubeFilename = fileNameWithoutExtension + msg._socketId \nvar filePath = \"/data/tempFiles/\" + msg.kubeFilename + \".yaml\";\n\nvar escapedKubeString = msg.kubeString.replace(/[\"$`]/g, \"\\\\$&\"); \n\nmsg.payload = \"echo \\\"\" + escapedKubeString + \"\\\" > \" + filePath;\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2945,
        "y": 680,
        "wires": [
            [
                "0844779b6253fb9c"
            ]
        ]
    },
    {
        "id": "0844779b6253fb9c",
        "type": "exec",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3255,
        "y": 680,
        "wires": [
            [
                "d2c6b8cc82ec15f9"
            ],
            [],
            []
        ]
    },
    {
        "id": "d2c6b8cc82ec15f9",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "kubeConfig File",
        "func": "msg.payload = \"KUBECONFIG=\" + \"/data/tempFiles/\" + msg.kubeFilename + \".yaml\" + \" kubectl get deployments -o JSON | jq '.items[] | {name: .metadata.name}'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3555,
        "y": 680,
        "wires": [
            [
                "6e30d3c4d23de648"
            ]
        ]
    },
    {
        "id": "6e30d3c4d23de648",
        "type": "exec",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3845,
        "y": 680,
        "wires": [
            [
                "de694924337e266d"
            ],
            [],
            []
        ]
    },
    {
        "id": "de694924337e266d",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "Check Kube Validation",
        "func": "function convertToJsonObject(data) {\n    const formattedData = data.replace(/}\\s*{/g, '},{');\n    const jsonArrayString = '[' + formattedData + ']';\n\n    try {\n        const jsonObject = JSON.parse(jsonArrayString);\n        return jsonObject;\n    } catch (error) {\n        console.error('Error parsing JSON:', error);\n        return null;\n    }\n}\n\nif (msg.payload === \"\") {\n    msg.payload = {};\n    msg.payload.auth = \"Warning\";\n    msg.payload.kubeConfig = \"disconnected\"\n  \n    \n} else {\n    const data = msg.payload;\n    const jsonObject = convertToJsonObject(data);\n    const masterImageNames = jsonObject.map(item => item.name);\n\n    msg.payload = {};\n    msg.payload.ui = {};\n    msg.payload.ui.masterImages = masterImageNames;\n    global.set(\"masterImageNames\", masterImageNames);\n    msg.payload.kubeConfig = \"Connected\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4135,
        "y": 680,
        "wires": [
            [
                "4fd0d2b0be40fc3d"
            ]
        ]
    },
    {
        "id": "845c9c2650bf5e64",
        "type": "exec",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4755,
        "y": 1140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6d442a83c46e63e7",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "Remove KubeConfig File",
        "func": "var command = \"rm /data/tempFiles/\" + msg.kubeFilename + \".yaml\";\n\nmsg.payload = command;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4450,
        "y": 1140,
        "wires": [
            [
                "845c9c2650bf5e64"
            ]
        ]
    },
    {
        "id": "ec34425d4ac90ed8",
        "type": "switch",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "",
        "property": "buttonStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "connectClicked",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "checkClicked",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "provisionClicked",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2605,
        "y": 920,
        "wires": [
            [
                "9eaa7eecdc8db97b"
            ],
            [
                "b6a1f1e62012abf1"
            ],
            [
                "dd0174734327eed0"
            ]
        ]
    },
    {
        "id": "b6a1f1e62012abf1",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "Check Dep URL",
        "func": "let depurl = msg.deploymentUrl.replace(/\\./g, '-');\nconst masterImages = global.get(\"masterImageNames\");\nlet exists = masterImages.includes(depurl);\n\nif (exists) {  \n    msg.imagestatus = \"exist\";\n    msg.payload={}\n    msg.payload.auth= \"Warning\" \n    msg.payload.checkConfig = \"disconnected\"\n    msg.payload.state = {}\n    msg.payload.state.title =\"Deployment URL Unavailable\"\n    msg.payload.state.description =\"This deployment URL is already in use and cannot be utilized for a new deployment. Please choose a different URL or verify if the existing deployment is active and still required. If you believe this is an error or need further assistance, please contact support for guidance and resolution.\"\n    msg.payload.state.warningButton=\"Close\"\n} \nelse {\n    msg.imagestatus = \"not exist\";\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2945,
        "y": 920,
        "wires": [
            [
                "16969cf5890e0a36"
            ]
        ]
    },
    {
        "id": "16969cf5890e0a36",
        "type": "switch",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "",
        "property": "imagestatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "exist",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "not exist",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3265,
        "y": 920,
        "wires": [
            [
                "ed1389573c168271"
            ],
            [
                "60d961d803eb5edc"
            ]
        ]
    },
    {
        "id": "df79245f4a9a27dd",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "Check Domain",
        "func": "if (msg.payload === false) {\n    msg.payload = {};          \n    msg.payload.auth = \"Warning\";\n    msg.payload.checkConfig = \"disconnected\"\n    msg.payload.state = {}\n    msg.payload.state.title = \"Domain Not Found\"\n    msg.payload.state.description = \" the domain you are trying to reach does not exist. It could be due to an incorrect domain name entry or the domain may no longer be active. Please verify the domain name for any typing errors. If the domain name is correct, it's possible that the domain has been removed or is currently inactive.\"  // Set the 'auth' property to \"Warning\"\n    msg.payload.state.warningButton = \"Close\"\n} else {\n    msg.payload = {};        \n    msg.payload.checkConfig = \"Checked\";\n    \n}\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4135,
        "y": 920,
        "wires": [
            [
                "98201cd6759c15c7"
            ]
        ]
    },
    {
        "id": "60d961d803eb5edc",
        "type": "change",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "Set dep URL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "deploymentUrl",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3555,
        "y": 920,
        "wires": [
            [
                "ae23bd3fcf014666"
            ]
        ]
    },
    {
        "id": "ae23bd3fcf014666",
        "type": "ping",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "protocol": "Automatic",
        "mode": "triggered",
        "name": "",
        "host": "",
        "timer": "",
        "inputs": 1,
        "x": 3845,
        "y": 920,
        "wires": [
            [
                "df79245f4a9a27dd"
            ]
        ]
    },
    {
        "id": "841f65e192783172",
        "type": "exec",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3265,
        "y": 1140,
        "wires": [
            [
                "a42253e9573183fc"
            ],
            [],
            []
        ]
    },
    {
        "id": "a42253e9573183fc",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "",
        "func": "var match = msg.payload.match(/PERCENTAGE(\\d+)/);\n\nif (match && match[1]) {\n    var title= msg.payload\n    title = title.replace(\"PERCENTAGE\", \"\");\n    msg.payload={}\n    msg.payload.progressbar = \"ProgressbarConnected\"\n    msg.payload.progressBarTitle = title + \"%\"\n    msg.payload.progressBarLoading = match[1];\n    \n    if (msg.payload.progressBarLoading ==\"100\"){\n\n        msg.payload.provision=\"ProvisionConnected\"\n        msg.payload.auth = \"Warning\";\n\n        msg.payload.state = {}\n        msg.payload.state.title = \"Deployment Successfully Created\"\n        msg.payload.state.description = \"Your Kubernetes deployment has been successfully created. You can now manage and monitor your deployment. If you wish to view and manage your newly created deployment, please click on the 'Go to Deployments' button.\"\n        msg.payload.state.warningButton = \"Close\"\n        msg.payload.state.deploymentButtons = []\n        msg.payload.state.deploymentButtons.push(\n            { name: \"Go to Deployments\", url: msg.deploymentUrl }\n        );\n    }\n} \n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3555,
        "y": 1140,
        "wires": [
            [
                "26b5bad4d239e766"
            ]
        ]
    },
    {
        "id": "dd0174734327eed0",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "Create New dep",
        "func": "    msg.payload = \"/data/depgenerator/gendep \" + msg.masterImage + \" \" + msg.deploymentUrl + \" \" + \"/data/tempFiles/\" + msg.kubeFilename + \".yaml\"\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2955,
        "y": 1140,
        "wires": [
            [
                "841f65e192783172"
            ]
        ]
    },
    {
        "id": "26b5bad4d239e766",
        "type": "switch",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "",
        "property": "payload.progressBarLoading",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "100",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3845,
        "y": 1140,
        "wires": [
            [
                "9730f68b96d1eb37"
            ],
            [
                "d7603e03706ad23d"
            ]
        ]
    },
    {
        "id": "9730f68b96d1eb37",
        "type": "delay",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4135,
        "y": 1140,
        "wires": [
            [
                "e63e0aae8aa7ee42",
                "6d442a83c46e63e7"
            ]
        ]
    },
    {
        "id": "4fd0d2b0be40fc3d",
        "type": "link out",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "link out 40",
        "mode": "link",
        "links": [
            "6ff354d8bb72ea2a"
        ],
        "x": 4427.5,
        "y": 680,
        "wires": []
    },
    {
        "id": "ed1389573c168271",
        "type": "link out",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "link out 41",
        "mode": "link",
        "links": [
            "6ff354d8bb72ea2a"
        ],
        "x": 3467.5,
        "y": 820,
        "wires": []
    },
    {
        "id": "98201cd6759c15c7",
        "type": "link out",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "link out 42",
        "mode": "link",
        "links": [
            "6ff354d8bb72ea2a"
        ],
        "x": 4427.5,
        "y": 920,
        "wires": []
    },
    {
        "id": "d7603e03706ad23d",
        "type": "link out",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "link out 43",
        "mode": "link",
        "links": [
            "6ff354d8bb72ea2a"
        ],
        "x": 4032.5,
        "y": 1260,
        "wires": []
    },
    {
        "id": "e63e0aae8aa7ee42",
        "type": "link out",
        "z": "c89e5e2e6b30c13a",
        "g": "7f7764c03513154f",
        "name": "link out 44",
        "mode": "link",
        "links": [
            "6ff354d8bb72ea2a"
        ],
        "x": 4327.5,
        "y": 1260,
        "wires": []
    },
    {
        "id": "33156eb7f9068b5c",
        "type": "group",
        "z": "c89e5e2e6b30c13a",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b7159919e8b6cfa7",
            "b92fbd02c4a66a18",
            "15d08e820366658e",
            "fa3be8c8c04a50d0",
            "cb107b5829f22e6a",
            "ed2d6013f7059bf6",
            "5597b81d569d1c3f",
            "11627009907e4058",
            "84223c69747cd1af",
            "b127fd22fd55e50e",
            "3ba40c547a451c33",
            "3d29372773e1fe6c",
            "22ad7d38f52f4a7d",
            "91ec56a861d05149",
            "4f1ddce56c866f1b",
            "096457fce2e96f16",
            "be71fe6e2804767b",
            "2794e6039b31428b",
            "b5dfe8816fd090e1",
            "55dac9538151c188",
            "659fcf10908313b9",
            "e2b3de5543bb515b",
            "716fac964c723cbc",
            "3e51a0247371c3f8",
            "634f7a6eb644ddf8"
        ],
        "x": 2454,
        "y": 1424,
        "w": 2572,
        "h": 689.5
    },
    {
        "id": "b7159919e8b6cfa7",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "Make Dir",
        "func": "// Check if msg.kubeConfig is indeed a buffer\nif (Buffer.isBuffer(msg.kubeConfig.buffer)) {\n    // Convert the buffer to a string\n    msg.kubeString = msg.kubeConfig.buffer.toString();\n}\nvar fileNameWithoutExtension = msg.kubeConfig.name.replace(/\\.yaml$/, \"\");\n// Removes .yaml extension if it exists\nmsg.kubeFilename = fileNameWithoutExtension + msg._socketId \nvar filePath = \"/data/tempFiles/\" + msg.kubeFilename + \".yaml\";\n\nvar escapedKubeString = msg.kubeString.replace(/[\"$`]/g, \"\\\\$&\");  // escape \", $ and ` characters\n\nmsg.payload = \"echo \\\"\" + escapedKubeString + \"\\\" > \" + filePath;\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2935,
        "y": 1500,
        "wires": [
            [
                "b92fbd02c4a66a18"
            ]
        ]
    },
    {
        "id": "b92fbd02c4a66a18",
        "type": "exec",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3245,
        "y": 1500,
        "wires": [
            [
                "15d08e820366658e"
            ],
            [],
            []
        ]
    },
    {
        "id": "15d08e820366658e",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "kubeConfig File",
        "func": "msg.payload = \"KUBECONFIG=\" + \"/data/tempFiles/\" + msg.kubeFilename + \".yaml\" + \" kubectl get deployments -o JSON | jq '.items[] | {name: .metadata.name}'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3535,
        "y": 1500,
        "wires": [
            [
                "fa3be8c8c04a50d0"
            ]
        ]
    },
    {
        "id": "fa3be8c8c04a50d0",
        "type": "exec",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3825,
        "y": 1500,
        "wires": [
            [
                "634f7a6eb644ddf8"
            ],
            [],
            []
        ]
    },
    {
        "id": "cb107b5829f22e6a",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "Check Kube Validation",
        "func": "\n\nif (msg.payload === \"\") {\n    msg.payload = {};\n    msg.payload.auth = \"Warning\";\n    msg.payload.repoConfig = \"disconnected\";\n} else {\n    var masterImageNames = msg.masterImagesList;\n    global.set(\"masterImageNames\", masterImageNames);\n    let originalPayload = msg.payload;\n\n    msg.payload = {};\n    msg.payload.repoConfig = \"Connected\";\n\n    msg.payload.ui = {};\n\n    msg.payload.ui.repoMasterImages = originalPayload; \n    global.set(\"repoMasterImages\", originalPayload);\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4745,
        "y": 1500,
        "wires": [
            [
                "b5dfe8816fd090e1"
            ]
        ]
    },
    {
        "id": "ed2d6013f7059bf6",
        "type": "exec",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4755,
        "y": 1920,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5597b81d569d1c3f",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "function 64",
        "func": "var command = \"rm /data/tempFiles/\" + msg.kubeFilename + \".yaml\";\n\nmsg.payload = command;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4445,
        "y": 1920,
        "wires": [
            [
                "ed2d6013f7059bf6"
            ]
        ]
    },
    {
        "id": "11627009907e4058",
        "type": "switch",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "",
        "property": "buttonStatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "connectClicked",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "checkClicked",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "provisionClicked",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2605,
        "y": 1700,
        "wires": [
            [
                "b7159919e8b6cfa7"
            ],
            [
                "84223c69747cd1af"
            ],
            [
                "096457fce2e96f16"
            ]
        ]
    },
    {
        "id": "84223c69747cd1af",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "function 65",
        "func": "\nlet depurl = msg.deploymentUrl.replace(/\\./g, '-');\n\n// Step 2: Search for depurl in the masterImages array\nconst masterImages = global.get(\"masterImageNames\");\n\n// let masterImages = msg.masterImages;\nlet exists = masterImages.includes(depurl);\n\n// Step 3: Set the result in msg.payload\nif (exists) {  \n    msg.imagestatus = \"exist\";\n    msg.payload={}\n    msg.payload.auth= \"Warning\" \n    msg.payload.checkConfig = \"disconnected\"\n    msg.payload.state = {}\n    msg.payload.state.title =\"Deployment URL Unavailable\"\n    msg.payload.state.description =\"This deployment URL is already in use and cannot be utilized for a new deployment. Please choose a different URL or verify if the existing deployment is active and still required. If you believe this is an error or need further assistance, please contact support for guidance and resolution.\"\n    msg.payload.state.warningButton=\"Close\"\n} \nelse {\n    msg.imagestatus = \"not exist\";\n    // msg.payload = \"export KUBECONFIG=/data/tempFiles/\" + msg.payload.kubeFilename + \".yaml && cd /data/depgenerator/ && /data/depgenerator/newdepgenerator \" + msg.payload.masterImage +\" \"+ msg.payload.deploymentUrl\n    // msg.payload = \"/data/depgenerator/gendep \" + msg.payload.masterImage + \" \" + msg.payload.deploymentUrl + \" \" + \"/data/tempFiles/\" + msg.payload.kubeFilename+\".yaml\"\n\n}\n\n// Return the message object\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2945,
        "y": 1700,
        "wires": [
            [
                "b127fd22fd55e50e"
            ]
        ]
    },
    {
        "id": "b127fd22fd55e50e",
        "type": "switch",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "",
        "property": "imagestatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "exist",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "not exist",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3245,
        "y": 1700,
        "wires": [
            [
                "55dac9538151c188"
            ],
            [
                "3d29372773e1fe6c"
            ]
        ]
    },
    {
        "id": "3ba40c547a451c33",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "function 66",
        "func": "\nif (msg.payload === false) {\n    // If msg.payload is false, set new values\n    msg.payload = {};          // Reset msg.payload to an empty object\n    msg.payload.auth = \"Warning\";\n    msg.payload.checkConfig = \"disconnected\"\n    msg.payload.state = {}\n    msg.payload.state.title = \"Domain Not Found\"\n    msg.payload.state.description = \" the domain you are trying to reach does not exist. It could be due to an incorrect domain name entry or the domain may no longer be active. Please verify the domain name for any typing errors. If the domain name is correct, it's possible that the domain has been removed or is currently inactive.\"  // Set the 'auth' property to \"Warning\"\n    msg.payload.state.warningButton = \"Close\"\n} else {\n    // If msg.payload is not false, set checkConfig to \"Checked\"\n    msg.payload = {};          // Reset msg.payload to an empty object\n\n    msg.payload.checkConfig = \"Checked\";\n    \n        // msg.imagestatus = \"not exist\";\n        // // msg.payload = \"export KUBECONFIG=/data/tempFiles/\" + msg.payload.kubeFilename + \".yaml && cd /data/depgenerator/ && /data/depgenerator/newdepgenerator \" + msg.payload.masterImage +\" \"+ msg.payload.deploymentUrl\n\n}\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4125,
        "y": 1700,
        "wires": [
            [
                "659fcf10908313b9"
            ]
        ]
    },
    {
        "id": "3d29372773e1fe6c",
        "type": "change",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "deploymentUrl",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3535,
        "y": 1700,
        "wires": [
            [
                "22ad7d38f52f4a7d"
            ]
        ]
    },
    {
        "id": "22ad7d38f52f4a7d",
        "type": "ping",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "protocol": "Automatic",
        "mode": "triggered",
        "name": "",
        "host": "",
        "timer": "",
        "inputs": 1,
        "x": 3825,
        "y": 1700,
        "wires": [
            [
                "3ba40c547a451c33"
            ]
        ]
    },
    {
        "id": "91ec56a861d05149",
        "type": "exec",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3245,
        "y": 1920,
        "wires": [
            [
                "4f1ddce56c866f1b"
            ],
            [],
            []
        ]
    },
    {
        "id": "4f1ddce56c866f1b",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "function 67",
        "func": "var match = msg.payload.match(/PERCENTAGE(\\d+)/);\n\n// Check if a match was found\nif (match && match[1]) {\n    var title= msg.payload\n    title = title.replace(\"PERCENTAGE\", \"\");\n    msg.payload={}\n    msg.payload.progressbar = \"ProgressbarConnected\"\n    msg.payload.progressBarTitle = title + \"%\"\n    msg.payload.progressBarLoading = match[1];\n    \n    if (msg.payload.progressBarLoading ==\"100\"){\n\n        msg.payload.provision=\"ProvisionConnected\"\n        msg.payload.auth = \"Warning\";\n\n        msg.payload.state = {}\n        msg.payload.state.title = \"Deployment Successfully Created\"\n        msg.payload.state.description = \"Your Kubernetes deployment has been successfully created. You can now manage and monitor your deployment. If you wish to view and manage your newly created deployment, please click on the 'Go to Deployments' button.\"\n        msg.payload.state.warningButton = \"Close\"\n        msg.payload.state.deploymentButtons = []\n        msg.payload.state.deploymentButtons.push(\n            { name: \"Go to Deployments\", url: msg.deploymentUrl }\n        );\n    }\n} \n\n// Return the modified message\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3535,
        "y": 1920,
        "wires": [
            [
                "be71fe6e2804767b"
            ]
        ]
    },
    {
        "id": "096457fce2e96f16",
        "type": "function",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "function 68",
        "func": "const repoMasterImages = global.get(\"repoMasterImages\") \n\nconst targetName = msg.repoMasterImage;\nconst matchedObject = repoMasterImages.find(item => item.name === targetName);\nif (matchedObject) {\n    msg.matchedUrl = matchedObject.url;\n}\n\n   \n   \nmsg.payload = \"/data/depgenerator/gitdep \" + msg.matchedUrl + \" \" + msg.deploymentUrl + \" \" + \"/data/tempFiles/\" + msg.kubeFilename + \".yaml\"\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2945,
        "y": 1920,
        "wires": [
            [
                "91ec56a861d05149"
            ]
        ]
    },
    {
        "id": "be71fe6e2804767b",
        "type": "switch",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "",
        "property": "payload.progressBarLoading",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "100",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3825,
        "y": 1920,
        "wires": [
            [
                "2794e6039b31428b"
            ],
            [
                "e2b3de5543bb515b"
            ]
        ]
    },
    {
        "id": "2794e6039b31428b",
        "type": "delay",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4125,
        "y": 1920,
        "wires": [
            [
                "716fac964c723cbc",
                "5597b81d569d1c3f"
            ]
        ]
    },
    {
        "id": "b5dfe8816fd090e1",
        "type": "link out",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "link out 45",
        "mode": "link",
        "links": [
            "6ff354d8bb72ea2a"
        ],
        "x": 4972.5,
        "y": 1500,
        "wires": []
    },
    {
        "id": "55dac9538151c188",
        "type": "link out",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "link out 46",
        "mode": "link",
        "links": [
            "6ff354d8bb72ea2a"
        ],
        "x": 3442.5,
        "y": 1600,
        "wires": []
    },
    {
        "id": "659fcf10908313b9",
        "type": "link out",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "link out 47",
        "mode": "link",
        "links": [
            "6ff354d8bb72ea2a"
        ],
        "x": 4322.5,
        "y": 1700,
        "wires": []
    },
    {
        "id": "e2b3de5543bb515b",
        "type": "link out",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "link out 48",
        "mode": "link",
        "links": [
            "6ff354d8bb72ea2a"
        ],
        "x": 4042.5,
        "y": 2060,
        "wires": []
    },
    {
        "id": "716fac964c723cbc",
        "type": "link out",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "link out 49",
        "mode": "link",
        "links": [
            "6ff354d8bb72ea2a"
        ],
        "x": 4362.5,
        "y": 2060,
        "wires": []
    },
    {
        "id": "3e51a0247371c3f8",
        "type": "http request",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://gitlab.com/leaneamasoud/newprovision/-/raw/main/repo.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 4445,
        "y": 1500,
        "wires": [
            [
                "cb107b5829f22e6a"
            ]
        ]
    },
    {
        "id": "634f7a6eb644ddf8",
        "type": "change",
        "z": "c89e5e2e6b30c13a",
        "g": "33156eb7f9068b5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "masterImagesList",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4140,
        "y": 1500,
        "wires": [
            [
                "3e51a0247371c3f8"
            ]
        ]
    }
]