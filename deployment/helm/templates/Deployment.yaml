apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "xfsc-orce.fullname" . }}-cr-leanea-com
  labels:
    app: cr-leanea-com
  {{- include "xfsc-orce.labels" . | nindent 4 }}
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/publicEndpoints: '[{"port":443,"protocol":"HTTPS","serviceName":"default:cr-leanea-com","ingressName":"default:node-red-ingress","hostname":"cr.leanea.com","path":"/","allNodes":false},{"port":443,"protocol":"HTTPS","serviceName":"default:cr-leanea-com","ingressName":"default:node-red-ingress","hostname":"cr.leanea.com","path":"/fscloud","allNodes":false}]'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"cr-leanea-com","app.kubernetes.io/instance":"cr-leanea-com","app.kubernetes.io/name":"cr-leanea-com","app.kubernetes.io/version":"3.0.2"},"name":"cr-leanea-com","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"cr-leanea-com","app.kubernetes.io/instance":"cr-leanea-com","app.kubernetes.io/name":"cr-leanea-com"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app":"cr-leanea-com","app.kubernetes.io/instance":"cr-leanea-com","app.kubernetes.io/name":"cr-leanea-com"}},"spec":{"containers":[{"image":"docker.io/leanea/cr:1.0.1","imagePullPolicy":"IfNotPresent","name":"xfscorce-leanea-com","ports":[{"containerPort":1880,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/usr/src/node-red/node_modules/@node-red/editor-client/public/red","name":"data","subPath":"red"},{"mountPath":"/usr/src/node-red/node_modules/@node-red/nodes/icons","name":"data","subPath":"icons"},{"mountPath":"/data","name":"data","subPath":"nodedata"},{"mountPath":"/all","name":"data"}]},{"args":["--baseurl","/fscloud"],"image":"filebrowser/filebrowser","imagePullPolicy":"Always","name":"filebrowser","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/srv","name":"data","subPath":"nodedata"}]}],"dnsPolicy":"ClusterFirst","initContainers":[{"command":["sh","-c","chown -R 1000:1000 /srv"],"image":"busybox","imagePullPolicy":"Always","name":"volume-permissions","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/srv","name":"data"}]}],"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":1000},"terminationGracePeriodSeconds":30,"volumes":[{"name":"data","persistentVolumeClaim":{"claimName":"cr-leanea-com"}}]}}}}
spec:
  replicas: {{ .Values.XORCE.replicas }}
  revisionHistoryLimit: {{ .Values.XORCE.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: cr-leanea-com
      app.kubernetes.io/instance: cr-leanea-com
      app.kubernetes.io/name: cr-leanea-com
    {{- include "xfsc-orce.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: cr-leanea-com
        app.kubernetes.io/instance: cr-leanea-com
        app.kubernetes.io/name: cr-leanea-com
      {{- include "xfsc-orce.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.XORCE.xfscorceLeaneaCom.image.repository }}:{{ .Values.XORCE.xfscorceLeaneaCom.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.XORCE.xfscorceLeaneaCom.imagePullPolicy }}
        name: xfscorce-leanea-com
        ports:
        - containerPort: 1880
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/src/node-red/node_modules/@node-red/editor-client/public/red
          name: data
          subPath: red
        - mountPath: /usr/src/node-red/node_modules/@node-red/nodes/icons
          name: data
          subPath: icons
        - mountPath: /data
          name: data
          subPath: nodedata
        - mountPath: /all
          name: data
      - args: {{- toYaml .Values.XORCE.filebrowser.args | nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.XORCE.filebrowser.image.repository }}:{{ .Values.XORCE.filebrowser.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.XORCE.filebrowser.imagePullPolicy }}
        name: filebrowser
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /srv
          name: data
          subPath: nodedata
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - chown -R 1000:1000 /srv
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.XORCE.volumePermissions.image.repository }}:{{ .Values.XORCE.volumePermissions.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.XORCE.volumePermissions.imagePullPolicy }}
        name: volume-permissions
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /srv
          name: data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "xfsc-orce.fullname" . }}-cr-leanea-com