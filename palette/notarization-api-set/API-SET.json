[
    {
        "id": "01d8da906b9a4de8",
        "type": "subflow",
        "name": "N_P_DLCR ",
        "info": "Delete Latest Claimed Request @ Comperhensive Notarization API > Notary > Processing",
        "category": "C Notarization API",
        "in": [
            {
                "x": 220,
                "y": 260,
                "wires": [
                    {
                        "id": "1bf1098886b39f8d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1747.5,
                "y": 260,
                "wires": [
                    {
                        "id": "88c2ea9fecb0673b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1bf1098886b39f8d",
        "type": "change",
        "z": "01d8da906b9a4de8",
        "name": "Set Url Params",
        "rules": [
            {
                "t": "set",
                "p": "baseUrlNotary",
                "pt": "msg",
                "to": "baseUrlNotary",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentProfileId",
                "pt": "msg",
                "to": "currentProfileId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentSessionId",
                "pt": "msg",
                "to": "currentSessionId",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 445,
        "y": 260,
        "wires": [
            [
                "7db9cc66aaddfdeb"
            ]
        ]
    },
    {
        "id": "7db9cc66aaddfdeb",
        "type": "function",
        "z": "01d8da906b9a4de8",
        "name": "Set Notary Token",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"notary_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 260,
        "wires": [
            [
                "238ed12e9546c0cd"
            ]
        ]
    },
    {
        "id": "238ed12e9546c0cd",
        "type": "http request",
        "z": "01d8da906b9a4de8",
        "name": "Delete Latest Claimed Request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrlNotary}}}/api/v1/profiles/{{currentProfileId}}/requests/{{currentSessionId}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1100,
        "y": 260,
        "wires": [
            [
                "88c2ea9fecb0673b"
            ]
        ]
    },
    {
        "id": "88c2ea9fecb0673b",
        "type": "function",
        "z": "01d8da906b9a4de8",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1465,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3d38c743f0c23ecb",
        "type": "subflow",
        "name": "N_P_RLCR",
        "info": "Reject Latest Claimed Request @ Comperhensive Notarization API > Notary > Processing",
        "category": "C Notarization API",
        "in": [
            {
                "x": 320,
                "y": 340,
                "wires": [
                    {
                        "id": "1292e3fc354fc424"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1440,
                "y": 340,
                "wires": [
                    {
                        "id": "aace2784682cc930",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "aace2784682cc930",
        "type": "http request",
        "z": "3d38c743f0c23ecb",
        "name": "Reject Latest Claimed Request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrlNotary}}}/api/v1/profiles/{{{currentProfileId}}}/requests/{{{currentSessionId}}}/reject",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1200,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "b8d1a5d2b015b7b7",
        "type": "function",
        "z": "3d38c743f0c23ecb",
        "name": "Set Notary Token",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"notary_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 855,
        "y": 340,
        "wires": [
            [
                "aace2784682cc930"
            ]
        ]
    },
    {
        "id": "1292e3fc354fc424",
        "type": "change",
        "z": "3d38c743f0c23ecb",
        "name": "Set Url Params",
        "rules": [
            {
                "t": "set",
                "p": "baseUrlNotary",
                "pt": "msg",
                "to": "baseUrlNotary",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentProfileId",
                "pt": "msg",
                "to": "currentProfileId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentSessionId",
                "pt": "msg",
                "to": "currentSessionId",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 525,
        "y": 340,
        "wires": [
            [
                "b8d1a5d2b015b7b7"
            ]
        ]
    },
    {
        "id": "bc29aa719ea1a4cc",
        "type": "subflow",
        "name": "N_P_ALCR ",
        "info": "Accept Latest Claimed Request @ Comperhensive Notarization API > Notary > Processing",
        "category": "C Notarization API",
        "in": [
            {
                "x": 200,
                "y": 280,
                "wires": [
                    {
                        "id": "ccd2d817446e453a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1687.5,
                "y": 280,
                "wires": [
                    {
                        "id": "72189c1c7e119f0b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0353080c722071a6",
        "type": "http request",
        "z": "bc29aa719ea1a4cc",
        "name": "Accept Latest Claimed Request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrlNotary}}}/api/v1/profiles/{{{currentProfileId}}}/requests/{{{currentSessionId}}}/accept",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1130,
        "y": 280,
        "wires": [
            [
                "72189c1c7e119f0b"
            ]
        ]
    },
    {
        "id": "0b0173eb442f7eeb",
        "type": "function",
        "z": "bc29aa719ea1a4cc",
        "name": "Set Notary Token",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"notary_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 775,
        "y": 280,
        "wires": [
            [
                "0353080c722071a6"
            ]
        ]
    },
    {
        "id": "ccd2d817446e453a",
        "type": "change",
        "z": "bc29aa719ea1a4cc",
        "name": "Set Url Params",
        "rules": [
            {
                "t": "set",
                "p": "baseUrlNotary",
                "pt": "msg",
                "to": "baseUrlNotary",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentProfileId",
                "pt": "msg",
                "to": "currentProfileId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentSessionId",
                "pt": "msg",
                "to": "currentSessionId",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 445,
        "y": 280,
        "wires": [
            [
                "0b0173eb442f7eeb"
            ]
        ]
    },
    {
        "id": "72189c1c7e119f0b",
        "type": "function",
        "z": "bc29aa719ea1a4cc",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1465,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "307fdfa956219c1c",
        "type": "subflow",
        "name": "N_P_FI",
        "info": "Fetch Identity @ Comperhensive Notarization API > Notary > Processing",
        "category": "C Notarization API",
        "in": [
            {
                "x": 260,
                "y": 280,
                "wires": [
                    {
                        "id": "7882952c2649a869"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1587.5,
                "y": 280,
                "wires": [
                    {
                        "id": "3d2d8ecfa0f55b66",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "912a21a73ed240e1",
        "type": "http request",
        "z": "307fdfa956219c1c",
        "name": "Fetch Identity",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrlNotary}}}/api/v1/profiles/{{{{currentProfileId}}}/requests/{{currentSessionId}}}/identity",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1115,
        "y": 280,
        "wires": [
            [
                "3d2d8ecfa0f55b66"
            ]
        ]
    },
    {
        "id": "6f33afc76fb0be0b",
        "type": "function",
        "z": "307fdfa956219c1c",
        "name": "Set Notary Token",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"notary_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 805,
        "y": 280,
        "wires": [
            [
                "912a21a73ed240e1"
            ]
        ]
    },
    {
        "id": "7882952c2649a869",
        "type": "change",
        "z": "307fdfa956219c1c",
        "name": "Set Url Params",
        "rules": [
            {
                "t": "set",
                "p": "baseUrlNotary",
                "pt": "msg",
                "to": "baseUrlNotary",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentProfileId",
                "pt": "msg",
                "to": "currentProfileId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentSessionId",
                "pt": "msg",
                "to": "currentSessionId",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 475,
        "y": 280,
        "wires": [
            [
                "6f33afc76fb0be0b"
            ]
        ]
    },
    {
        "id": "3d2d8ecfa0f55b66",
        "type": "function",
        "z": "307fdfa956219c1c",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1405,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fc601401c9524928",
        "type": "subflow",
        "name": "N_P_FDD",
        "info": "Fetch Document Details @ Comperhensive Notarization API > Notary > Processing",
        "category": "C Notarization API",
        "in": [
            {
                "x": 340,
                "y": 260,
                "wires": [
                    {
                        "id": "ded46339668931d0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1772.5,
                "y": 260,
                "wires": [
                    {
                        "id": "dfcc412f6d2793ee",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e7c870b52b77f196",
        "type": "http request",
        "z": "fc601401c9524928",
        "name": "Fetch Docuemnt Details",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrlNotary}}}/api/v1/profiles/{{{currentProfileId}}}/requests/{{{currentSessionId}}}/document/{{{currentDocumentId}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1240,
        "y": 260,
        "wires": [
            [
                "dfcc412f6d2793ee"
            ]
        ]
    },
    {
        "id": "791d22bb3a813f8d",
        "type": "function",
        "z": "fc601401c9524928",
        "name": "Set Notary Token",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"notary_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 915,
        "y": 260,
        "wires": [
            [
                "e7c870b52b77f196"
            ]
        ]
    },
    {
        "id": "ded46339668931d0",
        "type": "change",
        "z": "fc601401c9524928",
        "name": "Set Url Params",
        "rules": [
            {
                "t": "set",
                "p": "baseUrlNotary",
                "pt": "msg",
                "to": "baseUrlNotary",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentProfileId",
                "pt": "msg",
                "to": "currentProfileId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentSessionId",
                "pt": "msg",
                "to": "currentSessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentDocumentId",
                "pt": "msg",
                "to": "currentDocumentId",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 585,
        "y": 260,
        "wires": [
            [
                "791d22bb3a813f8d"
            ]
        ]
    },
    {
        "id": "dfcc412f6d2793ee",
        "type": "function",
        "z": "fc601401c9524928",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1565,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3bddd6b64fb4f9e7",
        "type": "subflow",
        "name": "N_P_VLR",
        "info": "View Latest Request @ Comperhensive Notarization API > Notary > Processing",
        "category": "C Notarization API",
        "in": [
            {
                "x": 160,
                "y": 300,
                "wires": [
                    {
                        "id": "2cae888920928b5a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1567.5,
                "y": 300,
                "wires": [
                    {
                        "id": "4c48f2baa5593b25",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "8c91f8129b2cf213",
        "type": "http request",
        "z": "3bddd6b64fb4f9e7",
        "name": "View Latest Request",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrlNotary}}}/api/v1/profiles/{{{currentProfileId}}}/requests/{{{currentSessionId}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 300,
        "wires": [
            [
                "4c48f2baa5593b25"
            ]
        ]
    },
    {
        "id": "8bc648ab03e0e79f",
        "type": "function",
        "z": "3bddd6b64fb4f9e7",
        "name": "Set Notary Token",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"notary_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 735,
        "y": 300,
        "wires": [
            [
                "8c91f8129b2cf213"
            ]
        ]
    },
    {
        "id": "2cae888920928b5a",
        "type": "change",
        "z": "3bddd6b64fb4f9e7",
        "name": "Set Url Params",
        "rules": [
            {
                "t": "set",
                "p": "baseUrlNotary",
                "pt": "msg",
                "to": "baseUrlNotary",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentProfileId",
                "pt": "msg",
                "to": "currentProfileId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentSessionId",
                "pt": "msg",
                "to": "currentSessionId",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 405,
        "y": 300,
        "wires": [
            [
                "8bc648ab03e0e79f"
            ]
        ]
    },
    {
        "id": "4c48f2baa5593b25",
        "type": "function",
        "z": "3bddd6b64fb4f9e7",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1355,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "36141d67768a5f5e",
        "type": "subflow",
        "name": "N_P_CLR",
        "info": "Complete Upload Process@ Comperhensive Notarization API > Notary > Processing",
        "category": "C Notarization API",
        "in": [
            {
                "x": 160,
                "y": 220,
                "wires": [
                    {
                        "id": "821767f20a91d6da"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1992.5,
                "y": 220,
                "wires": [
                    {
                        "id": "12bf83f6b47e15ff",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e37e3653a6b2963d",
        "type": "http request",
        "z": "36141d67768a5f5e",
        "name": "Claim Latest Request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrlNotary}}}/api/v1/profiles/{{{topAvailableProfileId}}}/requests/{{{topAvailableSessionId}}}/claim",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1030,
        "y": 220,
        "wires": [
            [
                "d973abc1a6d70a65"
            ]
        ]
    },
    {
        "id": "9ae2b5c6b27e68cd",
        "type": "function",
        "z": "36141d67768a5f5e",
        "name": "Set Notary Token",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"notary_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 715,
        "y": 220,
        "wires": [
            [
                "e37e3653a6b2963d"
            ]
        ]
    },
    {
        "id": "821767f20a91d6da",
        "type": "change",
        "z": "36141d67768a5f5e",
        "name": "Set Notary Base Url",
        "rules": [
            {
                "t": "set",
                "p": "baseUrlNotary",
                "pt": "msg",
                "to": "baseUrlNotary",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 375,
        "y": 220,
        "wires": [
            [
                "9ae2b5c6b27e68cd"
            ]
        ]
    },
    {
        "id": "d973abc1a6d70a65",
        "type": "change",
        "z": "36141d67768a5f5e",
        "name": "Set Current Session Id & Profile Id Globally",
        "rules": [
            {
                "t": "set",
                "p": "currentSessionId",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "currentProfileId",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 220,
        "wires": [
            [
                "12bf83f6b47e15ff"
            ]
        ]
    },
    {
        "id": "12bf83f6b47e15ff",
        "type": "function",
        "z": "36141d67768a5f5e",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1795,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "ea283e5cfa37965c",
        "type": "subflow",
        "name": "N_F_VLR",
        "info": "View Latest Request @ Comperhensive Notarization API > Notary > Fetch",
        "category": "C Notarization API",
        "in": [
            {
                "x": 120,
                "y": 280,
                "wires": [
                    {
                        "id": "2761c5626c3f1ca6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1652.5,
                "y": 280,
                "wires": [
                    {
                        "id": "0b65a02eb47623df",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f2f15f7252413551",
        "type": "http request",
        "z": "ea283e5cfa37965c",
        "name": "View Latest Request",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrlNotary}}}/api/v1/profiles/{{{topAvailableProfileId}}}/requests/{{{topAvailableSessionId}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 280,
        "wires": [
            [
                "0b65a02eb47623df"
            ]
        ]
    },
    {
        "id": "41bf98cc976f4192",
        "type": "function",
        "z": "ea283e5cfa37965c",
        "name": "Set Notary Token",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"notary_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 695,
        "y": 280,
        "wires": [
            [
                "f2f15f7252413551"
            ]
        ]
    },
    {
        "id": "2761c5626c3f1ca6",
        "type": "change",
        "z": "ea283e5cfa37965c",
        "name": "Set Notary Base Url",
        "rules": [
            {
                "t": "set",
                "p": "baseUrlNotary",
                "pt": "msg",
                "to": "baseUrlNotary",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 365,
        "y": 280,
        "wires": [
            [
                "41bf98cc976f4192"
            ]
        ]
    },
    {
        "id": "0b65a02eb47623df",
        "type": "function",
        "z": "ea283e5cfa37965c",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1345,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "85e188e00c2d78a0",
        "type": "subflow",
        "name": "N_F_FOCR",
        "info": "Fetch Own Claim Request @ Comperhensive Notarization API > Notary > Fetch",
        "category": "C Notarization API",
        "in": [
            {
                "x": 120,
                "y": 320,
                "wires": [
                    {
                        "id": "fafc9c96b7cd1bec"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1527.5,
                "y": 320,
                "wires": [
                    {
                        "id": "3ba9a40790d34b30",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "25d77577cdd79ba7",
        "type": "http request",
        "z": "85e188e00c2d78a0",
        "name": "Fetch Own Claim Request",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrlNotary}}}/api/v1/requests?limit=10&offset=0&filter=ownClaimed",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 902.5,
        "y": 320,
        "wires": [
            [
                "3ba9a40790d34b30"
            ]
        ]
    },
    {
        "id": "c2f450b3dfd42651",
        "type": "function",
        "z": "85e188e00c2d78a0",
        "name": "Set Notary Token",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"notary_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 567.5,
        "y": 320,
        "wires": [
            [
                "25d77577cdd79ba7"
            ]
        ]
    },
    {
        "id": "fafc9c96b7cd1bec",
        "type": "change",
        "z": "85e188e00c2d78a0",
        "name": "Set Notary Base Url",
        "rules": [
            {
                "t": "set",
                "p": "baseUrlNotary",
                "pt": "msg",
                "to": "baseUrlNotary",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 295,
        "y": 320,
        "wires": [
            [
                "c2f450b3dfd42651"
            ]
        ]
    },
    {
        "id": "3ba9a40790d34b30",
        "type": "function",
        "z": "85e188e00c2d78a0",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1275,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "529eaa7076e09269",
        "type": "subflow",
        "name": "N_F_FAR",
        "info": "Complete Upload Process@ Comperhensive Notarization API > Notary > Fetch",
        "category": "C Notarization API",
        "in": [
            {
                "x": 160,
                "y": 280,
                "wires": [
                    {
                        "id": "4d32b62121cd0b6e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1487.5,
                "y": 280,
                "wires": [
                    {
                        "id": "a11395f2836de0bd",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1545a926d755bf98",
        "type": "http request",
        "z": "529eaa7076e09269",
        "name": "Fetch Available Request",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrlNotary}}}/api/v1/requests?limit=10&offset=0&filter=available",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 980,
        "y": 280,
        "wires": [
            [
                "a11395f2836de0bd"
            ]
        ]
    },
    {
        "id": "eecab9de2d62c923",
        "type": "function",
        "z": "529eaa7076e09269",
        "name": "Set Notary Token",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"notary_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 655,
        "y": 280,
        "wires": [
            [
                "1545a926d755bf98"
            ]
        ]
    },
    {
        "id": "4d32b62121cd0b6e",
        "type": "change",
        "z": "529eaa7076e09269",
        "name": "Set Notary Base Url",
        "rules": [
            {
                "t": "set",
                "p": "baseUrlNotary",
                "pt": "msg",
                "to": "baseUrlNotary",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 365,
        "y": 280,
        "wires": [
            [
                "eecab9de2d62c923"
            ]
        ]
    },
    {
        "id": "a11395f2836de0bd",
        "type": "function",
        "z": "529eaa7076e09269",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1275,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "bc04a05cb0b57c3b",
        "type": "subflow",
        "name": "U_CUP",
        "info": "Complete Upload Process@ Comperhensive Notarization API > Util",
        "category": "C Notarization API",
        "in": [
            {
                "x": 120,
                "y": 260,
                "wires": [
                    {
                        "id": "28d89e4c5e8e5069"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1167.5,
                "y": 260,
                "wires": [
                    {
                        "id": "d2d12b1e3a9b7132",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "28d89e4c5e8e5069",
        "type": "change",
        "z": "bc04a05cb0b57c3b",
        "name": "set Headers & Url Params",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "taskUploadId",
                "pt": "msg",
                "to": "taskUploadId",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "0beb3b710cfeaf21"
            ]
        ]
    },
    {
        "id": "0beb3b710cfeaf21",
        "type": "http request",
        "z": "bc04a05cb0b57c3b",
        "name": "Complete Upload Process",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/document/{{{sessionId}}}/{{{taskUploadId}}}/finishTask",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 690,
        "y": 260,
        "wires": [
            [
                "d2d12b1e3a9b7132"
            ]
        ]
    },
    {
        "id": "d2d12b1e3a9b7132",
        "type": "function",
        "z": "bc04a05cb0b57c3b",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 985,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "24b40a3531edc689",
        "type": "subflow",
        "name": "U_CRT",
        "info": "Cancel Running Task@ Comperhensive Notarization API > Util",
        "category": "C Notarization API",
        "in": [
            {
                "x": 220,
                "y": 340,
                "wires": [
                    {
                        "id": "e69c3e0379423781"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1272.5,
                "y": 340,
                "wires": [
                    {
                        "id": "e125418df1b4f7ae",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "ca2b954354b7f367",
        "type": "http request",
        "z": "24b40a3531edc689",
        "name": "Cancel Running Task",
        "method": "DELETE",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}/task?taskId={{{currentTaskId}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 340,
        "wires": [
            [
                "e125418df1b4f7ae"
            ]
        ]
    },
    {
        "id": "e69c3e0379423781",
        "type": "change",
        "z": "24b40a3531edc689",
        "name": "set Headers & Url Params",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "currentTaskId",
                "pt": "msg",
                "to": "currentTaskId",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 340,
        "wires": [
            [
                "ca2b954354b7f367"
            ]
        ]
    },
    {
        "id": "e125418df1b4f7ae",
        "type": "function",
        "z": "24b40a3531edc689",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1055,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "55b2133ccf45900d",
        "type": "subflow",
        "name": "R_T_U_BUP",
        "info": "Begin Upload Processing @\r\nComperhensive Notarization API > Requester > Tasks  >  Upload Evidence Document",
        "category": "C Notarization API",
        "in": [
            {
                "x": 380,
                "y": 280,
                "wires": [
                    {
                        "id": "40580965adf0ccac"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1507.5,
                "y": 280,
                "wires": [
                    {
                        "id": "9cac8ecc6634a4c8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "44ed3f607c8d840c",
        "type": "http request",
        "z": "55b2133ccf45900d",
        "name": "Begin Upload Processing",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}/task?taskId={{{taskUploadId}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 940,
        "y": 280,
        "wires": [
            [
                "9cac8ecc6634a4c8"
            ]
        ]
    },
    {
        "id": "40580965adf0ccac",
        "type": "change",
        "z": "55b2133ccf45900d",
        "name": "Set Url Params",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 615,
        "y": 280,
        "wires": [
            [
                "44ed3f607c8d840c"
            ]
        ]
    },
    {
        "id": "9cac8ecc6634a4c8",
        "type": "function",
        "z": "55b2133ccf45900d",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1275,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c1181b3fee77d06e",
        "type": "subflow",
        "name": "R_T_B_APRTCL",
        "info": "Access protected resource to complete login @\r\nComperhensive Notarization API > Requester > Tasks  >  Browser Identification",
        "category": "C Notarization API",
        "in": [
            {
                "x": 220,
                "y": 300,
                "wires": [
                    {
                        "id": "7ea21e0a556980b5"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1487.5,
                "y": 300,
                "wires": [
                    {
                        "id": "c81f7240d327585e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "72d10a00db04c77f",
        "type": "http request",
        "z": "c1181b3fee77d06e",
        "name": "Access Protected Resource To Complete Login",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{protected-url-login}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 300,
        "wires": [
            [
                "c81f7240d327585e"
            ]
        ]
    },
    {
        "id": "7ea21e0a556980b5",
        "type": "function",
        "z": "c1181b3fee77d06e",
        "name": "Set Authorization",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"requestor_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 475,
        "y": 300,
        "wires": [
            [
                "72d10a00db04c77f"
            ]
        ]
    },
    {
        "id": "c81f7240d327585e",
        "type": "function",
        "z": "c1181b3fee77d06e",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1285,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c93a9da4bdd3faf6",
        "type": "subflow",
        "name": "R_T_B_SOI",
        "info": "Start OICD Identification @\r\nComperhensive Notarization API > Requester > Tasks  >  Browser Identification",
        "category": "C Notarization API",
        "in": [
            {
                "x": 220,
                "y": 240,
                "wires": [
                    {
                        "id": "172e58c0a3f2f938"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1340,
                "y": 240,
                "wires": [
                    {
                        "id": "139f4c03c1ad4085",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "734da9203083b2ac",
        "type": "http request",
        "z": "c93a9da4bdd3faf6",
        "name": "start OICD Identification",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{start-oidc-uri}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 800,
        "y": 240,
        "wires": [
            [
                "139f4c03c1ad4085"
            ]
        ]
    },
    {
        "id": "172e58c0a3f2f938",
        "type": "function",
        "z": "c93a9da4bdd3faf6",
        "name": "Set Headers",
        "func": "\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + global.get(\"requestor_access_token\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 485,
        "y": 240,
        "wires": [
            [
                "734da9203083b2ac"
            ]
        ]
    },
    {
        "id": "139f4c03c1ad4085",
        "type": "function",
        "z": "c93a9da4bdd3faf6",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1135,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "1d72e2bcf4de6b33",
        "type": "subflow",
        "name": "R_T_B_ SBIT",
        "info": "Start Browser Identification Task @\r\nComperhensive Notarization API > Requester > Tasks  >  Browser Identification",
        "category": "C Notarization API",
        "in": [
            {
                "x": 220,
                "y": 260,
                "wires": [
                    {
                        "id": "be93b813a4e75998"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1807.5,
                "y": 260,
                "wires": [
                    {
                        "id": "ed074ea3e1b87d03",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0656312449a04451",
        "type": "http request",
        "z": "1d72e2bcf4de6b33",
        "name": "Start Browser Identification Task",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}/task?taskId={{{taskBrowserIdentId}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 260,
        "wires": [
            [
                "a6d6ebcc751b58ab"
            ]
        ]
    },
    {
        "id": "be93b813a4e75998",
        "type": "change",
        "z": "1d72e2bcf4de6b33",
        "name": "set Headers & Url Params",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "taskBrowserIdentId",
                "pt": "msg",
                "to": "taskBrowserIdentId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 260,
        "wires": [
            [
                "0656312449a04451"
            ]
        ]
    },
    {
        "id": "a6d6ebcc751b58ab",
        "type": "change",
        "z": "1d72e2bcf4de6b33",
        "name": "Set start-oidc-uri & currentTaskId  globally",
        "rules": [
            {
                "t": "set",
                "p": "start-oidc-uri",
                "pt": "global",
                "to": "payload.uri",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "currentTaskId",
                "pt": "global",
                "to": "taskBrowserIdentId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 260,
        "wires": [
            [
                "ed074ea3e1b87d03"
            ]
        ]
    },
    {
        "id": "ed074ea3e1b87d03",
        "type": "function",
        "z": "1d72e2bcf4de6b33",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1635,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "98aac769db01ead3",
        "type": "subflow",
        "name": "R_CRUD_FIU",
        "info": "Fetch Invite URL\r\n@\r\nComperhensive Notarization API > Requester > Request CRUD ",
        "category": "C Notarization API",
        "in": [
            {
                "x": 180,
                "y": 280,
                "wires": [
                    {
                        "id": "55edb46fb9d2b08c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1252.5,
                "y": 280,
                "wires": [
                    {
                        "id": "76b5b8aaabc12c68",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e00583cf3d5e1084",
        "type": "http request",
        "z": "98aac769db01ead3",
        "name": "Fetch Invitation URL",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}/submission/ssiInviteUrl",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 675,
        "y": 280,
        "wires": [
            [
                "76b5b8aaabc12c68"
            ]
        ]
    },
    {
        "id": "55edb46fb9d2b08c",
        "type": "change",
        "z": "98aac769db01ead3",
        "name": "set Headers",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 375,
        "y": 280,
        "wires": [
            [
                "e00583cf3d5e1084"
            ]
        ]
    },
    {
        "id": "76b5b8aaabc12c68",
        "type": "function",
        "z": "98aac769db01ead3",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 975,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d071695fa64b5133",
        "type": "subflow",
        "name": "R_CRUD_MR ",
        "info": "Mark Ready\r\n@\r\nComperhensive Notarization API > Requester > Request CRUD ",
        "category": "C Notarization API",
        "in": [
            {
                "x": 400,
                "y": 320,
                "wires": [
                    {
                        "id": "d566b74b09134279"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1832.5,
                "y": 320,
                "wires": [
                    {
                        "id": "e2b5796aa115a1a0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "d566b74b09134279",
        "type": "change",
        "z": "d071695fa64b5133",
        "name": "set Headers & Url Params",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 320,
        "wires": [
            [
                "616137f7a8d92223"
            ]
        ]
    },
    {
        "id": "616137f7a8d92223",
        "type": "http request",
        "z": "d071695fa64b5133",
        "name": "Submit Credentials",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}/submission/ready",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 955,
        "y": 320,
        "wires": [
            [
                "a1381f38b7a255a0"
            ]
        ]
    },
    {
        "id": "a1381f38b7a255a0",
        "type": "change",
        "z": "d071695fa64b5133",
        "name": "Set Release URL globally",
        "rules": [
            {
                "t": "set",
                "p": "releaseUrl",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 320,
        "wires": [
            [
                "e2b5796aa115a1a0"
            ]
        ]
    },
    {
        "id": "e2b5796aa115a1a0",
        "type": "function",
        "z": "d071695fa64b5133",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1605,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0abd3c2556f4cad9",
        "type": "subflow",
        "name": "R_CRUD_SC",
        "info": "Submit Credentials\r\n@\r\nComperhensive Notarization API > Requester > Request CRUD ",
        "category": "C Notarization API",
        "in": [
            {
                "x": 120,
                "y": 260,
                "wires": [
                    {
                        "id": "8c2002b1e93080fa"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1732.5,
                "y": 260,
                "wires": [
                    {
                        "id": "40712e3e06b84091",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0b479277e01f32f0",
        "type": "http request",
        "z": "0abd3c2556f4cad9",
        "name": "Submit Credentials",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}/submission",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 905,
        "y": 260,
        "wires": [
            [
                "b40871be04a9d138"
            ]
        ]
    },
    {
        "id": "8c2002b1e93080fa",
        "type": "change",
        "z": "0abd3c2556f4cad9",
        "name": "set Headers",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 315,
        "y": 260,
        "wires": [
            [
                "8129f27e554c4687"
            ]
        ]
    },
    {
        "id": "8129f27e554c4687",
        "type": "template",
        "z": "0abd3c2556f4cad9",
        "name": "Set Payload",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"data\": {\n        \"Claims\": \"admin\",\n        \"FedName\": \"Simple Federation\",\n        \"PrcId\": \"5989240124\",\n        \"FedId\": \"30129\",\n        \"PrcEmail\": \"example@email.com\",\n        \"PrcFName\": \"Jane\",\n        \"PrcLName\": \"Doe\"\n    }\n}",
        "output": "str",
        "x": 615,
        "y": 260,
        "wires": [
            [
                "0b479277e01f32f0"
            ]
        ]
    },
    {
        "id": "b40871be04a9d138",
        "type": "change",
        "z": "0abd3c2556f4cad9",
        "name": "Set Request ID Globally",
        "rules": [
            {
                "t": "set",
                "p": "requestId",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 260,
        "wires": [
            [
                "40712e3e06b84091"
            ]
        ]
    },
    {
        "id": "40712e3e06b84091",
        "type": "function",
        "z": "0abd3c2556f4cad9",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1535,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4593794a30d9027f",
        "type": "subflow",
        "name": "R_CRUD_RS",
        "info": "Request State\r\n@\r\nComperhensive Notarization API > Requester > Request CRUD ",
        "category": "C Notarization API",
        "in": [
            {
                "x": 240,
                "y": 300,
                "wires": [
                    {
                        "id": "cd563b1bc58f8f04"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1632.5,
                "y": 300,
                "wires": [
                    {
                        "id": "663dab3d98eef772",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "eef6f30a960d8de3",
        "type": "http request",
        "z": "4593794a30d9027f",
        "name": "State of Request",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 785,
        "y": 300,
        "wires": [
            [
                "e8b5e845e8ace845"
            ]
        ]
    },
    {
        "id": "cd563b1bc58f8f04",
        "type": "change",
        "z": "4593794a30d9027f",
        "name": "set Headers",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 465,
        "y": 300,
        "wires": [
            [
                "eef6f30a960d8de3"
            ]
        ]
    },
    {
        "id": "e8b5e845e8ace845",
        "type": "change",
        "z": "4593794a30d9027f",
        "name": "Get Global Vars",
        "rules": [
            {
                "t": "set",
                "p": "taskVcId",
                "pt": "global",
                "to": "payload.tasks[0].taskId",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "taskBrowserIdentId",
                "pt": "global",
                "to": "payload.tasks[2].taskId",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "taskUploadId",
                "pt": "global",
                "to": "payload.tasks[1].taskId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1095,
        "y": 300,
        "wires": [
            [
                "663dab3d98eef772"
            ]
        ]
    },
    {
        "id": "663dab3d98eef772",
        "type": "function",
        "z": "4593794a30d9027f",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1405,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "612e3ba3fa2f5a1d",
        "type": "subflow",
        "name": "R_CRUD_CS",
        "info": "Create Session\r\n@\r\nComperhensive Notarization API > Requester > Request CRUD ",
        "category": "C Notarization API",
        "in": [
            {
                "x": 320,
                "y": 360,
                "wires": [
                    {
                        "id": "a8e7d8b27d521371"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1667.5,
                "y": 360,
                "wires": [
                    {
                        "id": "c537f8e246e41374",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a8e7d8b27d521371",
        "type": "change",
        "z": "612e3ba3fa2f5a1d",
        "name": "set Headers & Url Params",
        "rules": [
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.profileId",
                "pt": "msg",
                "to": "demo-strict-gaia-x-employee-credential-v2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "f26fc701d1adcf7d"
            ]
        ]
    },
    {
        "id": "f26fc701d1adcf7d",
        "type": "http request",
        "z": "612e3ba3fa2f5a1d",
        "name": "Create Session",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 905,
        "y": 360,
        "wires": [
            [
                "02a80d1eb6a97f7b"
            ]
        ]
    },
    {
        "id": "02a80d1eb6a97f7b",
        "type": "change",
        "z": "612e3ba3fa2f5a1d",
        "name": "Set sessionId & token",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "global",
                "to": "payload.token",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sessionId",
                "pt": "global",
                "to": "payload.sessionId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 360,
        "wires": [
            [
                "c537f8e246e41374"
            ]
        ]
    },
    {
        "id": "c537f8e246e41374",
        "type": "function",
        "z": "612e3ba3fa2f5a1d",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1475,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "79d00a965944a2d1",
        "type": "subflow",
        "name": "R_CRUD_FP",
        "info": "Fetch Profiles\r\n@\r\nComperhensive Notarization API > Requester > Request CRUD ",
        "category": "C Notarization API",
        "in": [
            {
                "x": 280,
                "y": 320,
                "wires": [
                    {
                        "id": "31515b8cb64497be"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1487.5,
                "y": 320,
                "wires": [
                    {
                        "id": "e5fc2bfebef7734c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "a"
        ],
        "outputLabels": [
            "a"
        ]
    },
    {
        "id": "d1c6f4fdd2846051",
        "type": "http request",
        "z": "79d00a965944a2d1",
        "name": "Fetch Profiles",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/profiles",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 845,
        "y": 320,
        "wires": [
            [
                "e5fc2bfebef7734c"
            ]
        ]
    },
    {
        "id": "31515b8cb64497be",
        "type": "change",
        "z": "79d00a965944a2d1",
        "name": "set Headers",
        "rules": [
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 505,
        "y": 320,
        "wires": [
            [
                "d1c6f4fdd2846051"
            ]
        ]
    },
    {
        "id": "e5fc2bfebef7734c",
        "type": "function",
        "z": "79d00a965944a2d1",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1185,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "1a2f1049053b26be",
        "type": "subflow",
        "name": "NOT_FIU",
        "info": "Fetch Invitation URL @\r\nNotarization API",
        "category": "Notarization API",
        "in": [
            {
                "x": 70,
                "y": 200,
                "wires": [
                    {
                        "id": "6347a7b8ecd5f01f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1167.5,
                "y": 200,
                "wires": [
                    {
                        "id": "7467dc9c230c5f97",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "cada46cac375d259",
        "type": "http request",
        "z": "1a2f1049053b26be",
        "name": "Fetch Invitation URL",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}/submission/ssiInviteUrl",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 645,
        "y": 200,
        "wires": [
            [
                "7467dc9c230c5f97"
            ]
        ]
    },
    {
        "id": "6347a7b8ecd5f01f",
        "type": "change",
        "z": "1a2f1049053b26be",
        "name": "set Headers & Url Params",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "cada46cac375d259"
            ]
        ]
    },
    {
        "id": "7467dc9c230c5f97",
        "type": "function",
        "z": "1a2f1049053b26be",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 955,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9532ebe4d14498c6",
        "type": "subflow",
        "name": "NOT_SOR",
        "info": "State Of Request @\r\nNotarization API",
        "category": "Notarization API",
        "in": [
            {
                "x": 260,
                "y": 300,
                "wires": [
                    {
                        "id": "5fb536151c874b87"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1367.5,
                "y": 300,
                "wires": [
                    {
                        "id": "4f92e74868974aac",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "12f5783f2d64ee58",
        "type": "http request",
        "z": "9532ebe4d14498c6",
        "name": "State of Request",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 815,
        "y": 300,
        "wires": [
            [
                "4f92e74868974aac"
            ]
        ]
    },
    {
        "id": "5fb536151c874b87",
        "type": "change",
        "z": "9532ebe4d14498c6",
        "name": "set Headers & Url Params",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 300,
        "wires": [
            [
                "12f5783f2d64ee58"
            ]
        ]
    },
    {
        "id": "4f92e74868974aac",
        "type": "function",
        "z": "9532ebe4d14498c6",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1125,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c985bff74ec4f06c",
        "type": "subflow",
        "name": "NOT_MRR",
        "info": "Mark Request Ready @ Notarization API",
        "category": "Notarization API",
        "in": [
            {
                "x": 200,
                "y": 260,
                "wires": [
                    {
                        "id": "05c888cb4882c507"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1312.5,
                "y": 260,
                "wires": [
                    {
                        "id": "dfa1636a9821accd",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "05c888cb4882c507",
        "type": "change",
        "z": "c985bff74ec4f06c",
        "name": "Set Headers & Url Params ",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 260,
        "wires": [
            [
                "f9e3c93448fbdb69"
            ]
        ]
    },
    {
        "id": "f9e3c93448fbdb69",
        "type": "http request",
        "z": "c985bff74ec4f06c",
        "name": "Mark Request Ready",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}/submission/ready",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 725,
        "y": 260,
        "wires": [
            [
                "dfa1636a9821accd"
            ]
        ]
    },
    {
        "id": "dfa1636a9821accd",
        "type": "function",
        "z": "c985bff74ec4f06c",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1075,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e3cce0e644688419",
        "type": "subflow",
        "name": "NOT_SNR",
        "info": "Submit Notarization Request @ Notarization API",
        "category": "Notarization API",
        "in": [
            {
                "x": 120,
                "y": 300,
                "wires": [
                    {
                        "id": "8e407fb52e312f53"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1472.5,
                "y": 300,
                "wires": [
                    {
                        "id": "536fa95c9b911993",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f792aa29bfd77452",
        "type": "http request",
        "z": "e3cce0e644688419",
        "name": "Submit Notarization Request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session/{{{sessionId}}}/submission",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 960,
        "y": 300,
        "wires": [
            [
                "536fa95c9b911993"
            ]
        ]
    },
    {
        "id": "8e407fb52e312f53",
        "type": "change",
        "z": "e3cce0e644688419",
        "name": "set Headers & Url Params",
        "rules": [
            {
                "t": "set",
                "p": "sessionId",
                "pt": "msg",
                "to": "sessionId",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.token",
                "pt": "msg",
                "to": "token",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 300,
        "wires": [
            [
                "fdd8f8aa00a7a1d2"
            ]
        ]
    },
    {
        "id": "fdd8f8aa00a7a1d2",
        "type": "template",
        "z": "e3cce0e644688419",
        "name": "Set Payload",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"data\": {\n        \"Claims\": \"admin\",\n        \"FedName\": \"Simple Federation\",\n        \"PrcId\": \"5989240124\",\n        \"FedId\": \"30129\",\n        \"PrcEmail\": \"example@email.com\",\n        \"PrcFName\": \"Jane\",\n        \"PrcLName\": \"Doe\"\n    }\n}",
        "output": "str",
        "x": 645,
        "y": 300,
        "wires": [
            [
                "f792aa29bfd77452"
            ]
        ]
    },
    {
        "id": "536fa95c9b911993",
        "type": "function",
        "z": "e3cce0e644688419",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1285,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "67cd30644957d6f6",
        "type": "subflow",
        "name": "NOT_CS",
        "info": "Create Session @ Notarization API",
        "category": "Notarization API",
        "in": [
            {
                "x": 80,
                "y": 240,
                "wires": [
                    {
                        "id": "ca474f287f0d96a7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1527.5,
                "y": 240,
                "wires": [
                    {
                        "id": "b1f29ae3f9915d83",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "ca474f287f0d96a7",
        "type": "change",
        "z": "67cd30644957d6f6",
        "name": "set Headers & Url Params",
        "rules": [
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.profileId",
                "pt": "msg",
                "to": "profileId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 240,
        "wires": [
            [
                "24409537bac80532"
            ]
        ]
    },
    {
        "id": "24409537bac80532",
        "type": "http request",
        "z": "67cd30644957d6f6",
        "name": "Create Session",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/session",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 645,
        "y": 240,
        "wires": [
            [
                "d55edb5be04d5bbf"
            ]
        ]
    },
    {
        "id": "d55edb5be04d5bbf",
        "type": "change",
        "z": "67cd30644957d6f6",
        "name": "Set sessionId & token Globally",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "global",
                "to": "payload.token",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sessionId",
                "pt": "global",
                "to": "payload.sessionId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 240,
        "wires": [
            [
                "b1f29ae3f9915d83"
            ]
        ]
    },
    {
        "id": "b1f29ae3f9915d83",
        "type": "function",
        "z": "67cd30644957d6f6",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1325,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f86882847182fc25",
        "type": "subflow",
        "name": "NOT_FP",
        "info": "Fetch Profiles\r\n@\r\nNotarization API",
        "category": "Notarization API",
        "in": [
            {
                "x": 220,
                "y": 240,
                "wires": [
                    {
                        "id": "56bf9c6575345b20"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1367.5,
                "y": 240,
                "wires": [
                    {
                        "id": "f6a023f2cca33e5d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "38b030c0b52f4b8c",
        "type": "http request",
        "z": "f86882847182fc25",
        "name": "Fetch Profiles",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{baseUrl}}}/api/v1/profiles",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 755,
        "y": 240,
        "wires": [
            [
                "f6a023f2cca33e5d"
            ]
        ]
    },
    {
        "id": "56bf9c6575345b20",
        "type": "change",
        "z": "f86882847182fc25",
        "name": "set Headers",
        "rules": [
            {
                "t": "set",
                "p": "baseUrl",
                "pt": "msg",
                "to": "baseUrl",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 435,
        "y": 240,
        "wires": [
            [
                "38b030c0b52f4b8c"
            ]
        ]
    },
    {
        "id": "f6a023f2cca33e5d",
        "type": "function",
        "z": "f86882847182fc25",
        "name": "Clean Message",
        "func": "var clone=msg\nmsg = {};\nmsg.payload = clone.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1125,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "465032d29c993408",
        "type": "tab",
        "label": "Notarization Node Sets",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bbbfdf796f2be00d",
        "type": "subflow:f86882847182fc25",
        "z": "465032d29c993408",
        "name": "",
        "x": 345,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "29c371d344006121",
        "type": "subflow:67cd30644957d6f6",
        "z": "465032d29c993408",
        "name": "",
        "x": 345,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "13876ded559f7dd2",
        "type": "subflow:e3cce0e644688419",
        "z": "465032d29c993408",
        "name": "",
        "x": 345,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "2875ac1e6ae9a3e3",
        "type": "subflow:c985bff74ec4f06c",
        "z": "465032d29c993408",
        "name": "",
        "x": 345,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c2d0ae25d2e0260c",
        "type": "subflow:9532ebe4d14498c6",
        "z": "465032d29c993408",
        "name": "",
        "x": 345,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "3d60152691f92d2f",
        "type": "subflow:1a2f1049053b26be",
        "z": "465032d29c993408",
        "name": "",
        "x": 345,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "d281e0f3dca77e33",
        "type": "subflow:79d00a965944a2d1",
        "z": "465032d29c993408",
        "name": "",
        "x": 345,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "bd2a18eb391f8a23",
        "type": "subflow:612e3ba3fa2f5a1d",
        "z": "465032d29c993408",
        "name": "",
        "x": 815,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "cfec4b65f1b94039",
        "type": "subflow:4593794a30d9027f",
        "z": "465032d29c993408",
        "name": "",
        "x": 815,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "07ca4caa9ef88c36",
        "type": "subflow:0abd3c2556f4cad9",
        "z": "465032d29c993408",
        "name": "",
        "x": 815,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "901d5ab5842537eb",
        "type": "subflow:d071695fa64b5133",
        "z": "465032d29c993408",
        "name": "",
        "x": 815,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c33d314d18dd78f6",
        "type": "subflow:98aac769db01ead3",
        "z": "465032d29c993408",
        "name": "",
        "x": 815,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "b08a720770d4be4d",
        "type": "subflow:1d72e2bcf4de6b33",
        "z": "465032d29c993408",
        "name": "",
        "x": 1305,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e84b4ffc266d05ae",
        "type": "subflow:c93a9da4bdd3faf6",
        "z": "465032d29c993408",
        "name": "",
        "x": 815,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "da548a5a28443833",
        "type": "subflow:c1181b3fee77d06e",
        "z": "465032d29c993408",
        "name": "",
        "x": 815,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "43a8ac4d6d246745",
        "type": "subflow:55b2133ccf45900d",
        "z": "465032d29c993408",
        "name": "",
        "x": 1305,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "1c66bf708ba6a0b3",
        "type": "subflow:24b40a3531edc689",
        "z": "465032d29c993408",
        "name": "",
        "x": 1305,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "5de98d9ac5fe6b81",
        "type": "subflow:bc04a05cb0b57c3b",
        "z": "465032d29c993408",
        "name": "",
        "x": 1305,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "dad4f4f192820110",
        "type": "subflow:529eaa7076e09269",
        "z": "465032d29c993408",
        "name": "",
        "x": 1305,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "ca86913a224afc59",
        "type": "subflow:85e188e00c2d78a0",
        "z": "465032d29c993408",
        "name": "",
        "x": 1305,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "5691d8246c6f1d17",
        "type": "subflow:ea283e5cfa37965c",
        "z": "465032d29c993408",
        "name": "",
        "x": 1305,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "f345ace36874de9c",
        "type": "subflow:36141d67768a5f5e",
        "z": "465032d29c993408",
        "name": "",
        "x": 1825,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e4b49579a8f7a39f",
        "type": "subflow:3bddd6b64fb4f9e7",
        "z": "465032d29c993408",
        "name": "",
        "x": 1825,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "88822d76a4cc02fe",
        "type": "subflow:fc601401c9524928",
        "z": "465032d29c993408",
        "name": "",
        "x": 1825,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b19cc60f3aaada73",
        "type": "subflow:307fdfa956219c1c",
        "z": "465032d29c993408",
        "name": "",
        "x": 1825,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "5b633751072f690a",
        "type": "subflow:bc29aa719ea1a4cc",
        "z": "465032d29c993408",
        "name": "",
        "x": 1825,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "e97db21bfb54a044",
        "type": "subflow:3d38c743f0c23ecb",
        "z": "465032d29c993408",
        "name": "",
        "x": 1825,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "933c9f77ecb9379d",
        "type": "subflow:01d8da906b9a4de8",
        "z": "465032d29c993408",
        "name": "",
        "x": 1825,
        "y": 960,
        "wires": [
            []
        ]
    }
]
