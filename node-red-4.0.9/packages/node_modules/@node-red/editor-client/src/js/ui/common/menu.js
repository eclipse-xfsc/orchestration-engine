/**
 * Copyright JS Foundation and other contributors, http://js.foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 **/
 RED.menu = (function() {

    var menuItems = {};
    let menuItemCount = 0

    function createMenuItem(opt) {
        var item;

        if (opt !== null && opt.id) {
            var themeSetting = RED.settings.theme("menu."+opt.id);
            if (themeSetting === false) {
                return null;
            }
        }

        function setInitialState() {
            var savedStateActive = RED.settings.get("menu-" + opt.id);
            if (opt.setting) {
                // May need to migrate pre-0.17 setting

                if (savedStateActive !== null) {
                    RED.settings.set(opt.setting,savedStateActive);
                    RED.settings.remove("menu-" + opt.id);
                } else {
                    savedStateActive = RED.settings.get(opt.setting);
                }
            }
            if (savedStateActive) {
                link.addClass("active");
                triggerAction(opt.id,true);
            } else if (savedStateActive === false) {
                link.removeClass("active");
                triggerAction(opt.id,false);
            } else if (opt.hasOwnProperty("selected")) {
                if (opt.selected) {
                    link.addClass("active");
                } else {
                    link.removeClass("active");
                }
                triggerAction(opt.id,opt.selected);
            }
        }

        if (opt === null) {
            item = $('<li class="red-ui-menu-divider"></li>');
        } else {
            item = $('<li></li>');
            if (!opt.id) {
                opt.id = 'red-ui-menu-item-'+(menuItemCount++)
            }
            if (opt.group) {
                item.addClass("red-ui-menu-group-"+opt.group);
            }
            //hossein
            let label = opt.label
            if (!opt.label && typeof opt.onselect === 'string') {
                label = RED.actions.getLabel(opt.onselect)
            }
            // var linkContent = '<a '+(opt.id?'id="'+opt.id+'" ':'')+'tabindex="-1" href="#">';
            var linkContent = '<a '+(opt.id?'id="'+opt.id+'" ':'')+'tabindex="-1" href="#" class="flex h-8 items-center space-x-3 px-3 pr-8 font-medium tracking-wide outline-none transition-all hover:bg-slate-100 hover:text-slate-800 focus:bg-slate-100 focus:text-slate-800 dark:hover:bg-navy-600 dark:hover:text-navy-100 dark:focus:bg-navy-600 dark:focus:text-navy-100" data-label='+label.replace(/ /g, "-")+'>';
            if (opt.toggle) {
                linkContent += '<i class="fa fa-square'+(opt.direction!=='right'?" pull-left":"")+'"></i>';
                linkContent += '<i class="fa fa-check-square'+(opt.direction!=='right'?" pull-left":"")+'"></i>';

            }
            if (opt.icon !== undefined) {
                if (/\.(png|svg)/.test(opt.icon)) {
                    linkContent += '<img src="'+opt.icon+'"/> ';
                } else {
                    linkContent += '<i class="'+(opt.icon?opt.icon:'" style="display: inline-block;"')+'"></i> ';
                }
            }
            // let label = opt.label
            // if (!opt.label && typeof opt.onselect === 'string') {
            //     label = RED.actions.getLabel(opt.onselect)
            // }
            if (opt.sublabel) {
                linkContent += '<span class="red-ui-menu-label-container"><span class="red-ui-menu-label">'+label+'</span>'+
                               '<span class="red-ui-menu-sublabel">'+opt.sublabel+'</span></span>'
            } else {
                
                var labelToSvgPath = {
                    'Show action list': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M14.3404 1.05978C14.7363 1.20311 15 1.57903 15 2.00005V9.00005H20C20.388 9.00005 20.741 9.22451 20.9056 9.5759C21.0702 9.92728 21.0166 10.3422 20.7682 10.6402L10.7682 22.6402C10.4987 22.9637 10.0555 23.0836 9.65959 22.9403C9.26371 22.797 9.00001 22.4211 9.00001 22.0001V15.0001H4.00001C3.61199 15.0001 3.259 14.7756 3.09442 14.4242C2.92984 14.0728 2.98339 13.658 3.23179 13.3599L13.2318 1.35987C13.5013 1.03643 13.9446 0.916454 14.3404 1.05978ZM10 14.0001V22.0001L20 10.0001H14V2.00005L4.00001 14.0001H10Z" clip-rule="evenodd"/></svg>', 
                    'Insert': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M12 23C18.0751 23 23 18.0751 23 12C23 5.92487 18.0751 1 12 1C5.92487 1 1 5.92487 1 12C1 18.0751 5.92487 23 12 23ZM22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12ZM12 6C12.2761 6 12.5 6.22386 12.5 6.5V11.5H17.5C17.7761 11.5 18 11.7239 18 12C18 12.2761 17.7761 12.5 17.5 12.5H12.5V17.5C12.5 17.7761 12.2761 18 12 18C11.7239 18 11.5 17.7761 11.5 17.5V12.5H6.5C6.22386 12.5 6 12.2761 6 12C6 11.7239 6.22386 11.5 6.5 11.5H11.5V6.5C11.5 6.22386 11.7239 6 12 6Z" clip-rule="evenodd"/></svg>',
                    'Selection to Subflow': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M12 23C18.0751 23 23 18.0751 23 12C23 5.92487 18.0751 1 12 1C5.92487 1 1 5.92487 1 12C1 18.0751 5.92487 23 12 23ZM22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12ZM12 6C12.2761 6 12.5 6.22386 12.5 6.5V11.5H17.5C17.7761 11.5 18 11.7239 18 12C18 12.2761 17.7761 12.5 17.5 12.5H12.5V17.5C12.5 17.7761 12.2761 18 12 18C11.7239 18 11.5 17.7761 11.5 17.5V12.5H6.5C6.22386 12.5 6 12.2761 6 12C6 11.7239 6.22386 11.5 6.5 11.5H11.5V6.5C11.5 6.22386 11.7239 6 12 6Z" clip-rule="evenodd"/></svg>',
                    'Select all': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M4.5 6C4.22386 6 4 6.22386 4 6.5C4 6.77614 4.22386 7 4.5 7H19.5C19.7761 7 20 6.77614 20 6.5C20 6.22386 19.7761 6 19.5 6H4.5ZM10 12C10 11.7239 10.2239 11.5 10.5 11.5H19.5C19.7761 11.5 20 11.7239 20 12C20 12.2761 19.7761 12.5 19.5 12.5H10.5C10.2239 12.5 10 12.2761 10 12ZM4 17.5C4 17.2239 4.22386 17 4.5 17H19.5C19.7761 17 20 17.2239 20 17.5C20 17.7761 19.7761 18 19.5 18H4.5C4.22386 18 4 17.7761 4 17.5Z" clip-rule="evenodd"/></svg>', 
                    'Export': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M16.6464 10.8536L12.5 6.70711V22.5C12.5 22.7761 12.2761 23 12 23C11.7239 23 11.5 22.7761 11.5 22.5V6.70711L7.35355 10.8536C7.15829 11.0488 6.84171 11.0488 6.64645 10.8536C6.45118 10.6583 6.45118 10.3417 6.64645 10.1464L11.6464 5.14645C11.8417 4.95118 12.1583 4.95118 12.3536 5.14645L17.3536 10.1464C17.5488 10.3417 17.5488 10.6583 17.3536 10.8536C17.1583 11.0488 16.8417 11.0488 16.6464 10.8536ZM2 12.5C2 12.2239 1.77614 12 1.5 12C1.22386 12 1 12.2239 1 12.5V20C1 21.6569 2.34315 23 4 23H20C21.6569 23 23 21.6569 23 20V12.5C23 12.2239 22.7761 12 22.5 12C22.2239 12 22 12.2239 22 12.5V20C22 21.1046 21.1046 22 20 22H4C2.89543 22 2 21.1046 2 20V12.5Z" clip-rule="evenodd"></path></svg>',
                    'Import': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M7.35355 13.1464L11.5 17.2929V1.5C11.5 1.22386 11.7239 1 12 1C12.2761 1 12.5 1.22386 12.5 1.5V17.2929L16.6464 13.1464C16.8417 12.9512 17.1583 12.9512 17.3536 13.1464C17.5488 13.3417 17.5488 13.6583 17.3536 13.8536L12.3536 18.8536C12.1583 19.0488 11.8417 19.0488 11.6464 18.8536L6.64645 13.8536C6.45118 13.6583 6.45118 13.3417 6.64645 13.1464C6.84171 12.9512 7.15829 12.9512 7.35355 13.1464ZM2 12.5C2 12.2239 1.77614 12 1.5 12C1.22386 12 1 12.2239 1 12.5V20C1 21.6569 2.34315 23 4 23H20C21.6569 23 23 21.6569 23 20V12.5C23 12.2239 22.7761 12 22.5 12C22.2239 12 22 12.2239 22 12.5V20C22 21.1046 21.1046 22 20 22H4C2.89543 22 2 21.1046 2 20V12.5Z" clip-rule="evenodd"/></svg>',
                    'Delete selection': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M8 5C8 3.34315 9.34315 2 11 2H13C14.6569 2 16 3.34315 16 5H21.5C21.7761 5 22 5.22386 22 5.5C22 5.77614 21.7761 6 21.5 6H19V20C19 21.6569 17.6569 23 16 23H8C6.34315 23 5 21.6569 5 20V6H2.5C2.22386 6 2 5.77614 2 5.5C2 5.22386 2.22386 5 2.5 5H8ZM6 6V20C6 21.1046 6.89543 22 8 22H16C17.1046 22 18 21.1046 18 20V6H6ZM14.7324 4C14.9026 4.29417 15 4.63571 15 5H9C9 4.63571 9.09739 4.29417 9.26756 4C9.61337 3.4022 10.2597 3 11 3H13C13.7403 3 14.3866 3.4022 14.7324 4ZM10.5 12C10.7761 12 11 12.2239 11 12.5V18.5C11 18.7761 10.7761 19 10.5 19C10.2239 19 10 18.7761 10 18.5V12.5C10 12.2239 10.2239 12 10.5 12ZM14 12.5C14 12.2239 13.7761 12 13.5 12C13.2239 12 13 12.2239 13 12.5V18.5C13 18.7761 13.2239 19 13.5 19C13.7761 19 14 18.7761 14 18.5V12.5Z" clip-rule="evenodd"/></svg>',
                    'Paste nodes': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M2 5.38198L9.65833 1.55279C10.3854 1.18926 11.1871 1 12 1C12.8129 1 13.6146 1.18926 14.3416 1.55279L22 5.38197C22.6128 5.6884 23 6.3148 23 7C23 7.6852 22.6128 8.3116 22 8.61803L20.2361 9.49999L22 10.3819C22.6128 10.6884 23 11.3148 23 12C23 12.6852 22.6128 13.3116 22 13.618L19.6978 14.7691C19.8804 14.8351 20.0602 14.912 20.2361 15L22 15.8819C22.6128 16.1884 23 16.8148 23 17.5C23 18.1852 22.6128 18.8116 22 19.118L14.3416 22.9472C13.6146 23.3107 12.8129 23.5 12 23.5C11.1871 23.5 10.3854 23.3107 9.65834 22.9472L2 19.118C1.38711 18.8116 0.999969 18.1851 1 17.4999C1.00003 16.8147 1.38716 16.1884 2 15.8819L3.76387 15C3.93976 14.9121 4.11953 14.8351 4.30222 14.7691L2 13.618C1.38711 13.3116 0.999969 12.6851 1 11.9999C1.00003 11.3147 1.38716 10.6884 2 10.382L3.76387 9.50002L2 8.61805C1.38711 8.3116 0.999969 7.68516 1 6.99993C1.00003 6.31475 1.38716 5.6884 2 5.38198ZM13.8944 16.5527C13.3062 16.8468 12.6576 16.9999 12 16.9999C11.3423 16.9999 10.6938 16.8468 10.1056 16.5527C7.55278 15.2763 5 14 2.44721 12.7236C2.17312 12.5866 1.99999 12.3064 2 12C2.00001 11.6935 2.17314 11.4134 2.44721 11.2764L4.21109 10.3944C4.45761 10.2712 4.71368 10.1749 4.97513 10.1056L9.65834 12.4472C10.3854 12.8107 11.1871 13 12 13C12.8128 13 13.6146 12.8107 14.3416 12.4472L19.0248 10.1056C19.2863 10.1749 19.5423 10.2712 19.7888 10.3944L21.5528 11.2764C21.8268 11.4134 22 11.6936 22 12C22 12.3064 21.8268 12.5865 21.5528 12.7236C19 13.9999 16.4472 15.2763 13.8944 16.5527ZM5.72685 15.4815C5.20597 15.5171 4.69047 15.6547 4.21109 15.8944L2.44721 16.7764C2.17314 16.9134 2.00001 17.1935 2 17.4999C1.99999 17.8064 2.17312 18.0865 2.44721 18.2236L10.1056 22.0528C10.6938 22.3469 11.3423 22.5 12 22.5C12.6576 22.5 13.3062 22.3469 13.8944 22.0528L21.5528 18.2236C21.8268 18.0865 22 17.8064 22 17.5C22 17.1935 21.8268 16.9134 21.5528 16.7764L19.7888 15.8944C19.3095 15.6547 18.794 15.5171 18.2731 15.4814L14.3416 17.4472C13.6146 17.8107 12.8129 18 12 18C11.1871 18 10.3854 17.8107 9.65834 17.4472L5.72685 15.4815ZM21.5528 7.72361L13.8944 11.5527C13.3062 11.8468 12.6576 12 12 12C11.3423 12 10.6938 11.8469 10.1056 11.5528L2.44721 7.72362C2.17312 7.58657 1.99999 7.30642 2 6.99997C2.00001 6.69355 2.17314 6.41344 2.44721 6.2764L10.1055 2.44722C10.6938 2.15311 11.3424 2 12 2C12.6576 2 13.3062 2.15311 13.8944 2.44721L21.5528 6.27639C21.8268 6.41343 22 6.69357 22 7C22 7.30643 21.8268 7.58657 21.5528 7.72361Z" clip-rule="evenodd"/></svg>', 
                    'Copy selected nodes': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M10 1C8.34315 1 7 2.34315 7 4V7H4C2.34315 7 1 8.34315 1 10V20C1 21.6569 2.34315 23 4 23H14C15.6569 23 17 21.6569 17 20V17H20C21.6569 17 23 15.6569 23 14V4C23 2.34315 21.6569 1 20 1H10ZM17 16H20C21.1046 16 22 15.1046 22 14V4C22 2.89543 21.1046 2 20 2H10C8.89543 2 8 2.89543 8 4V7H14C15.6569 7 17 8.34315 17 10V16ZM4 8C2.89543 8 2 8.89543 2 10V20C2 21.1046 2.89543 22 4 22H14C15.1046 22 16 21.1046 16 20V10C16 8.89543 15.1046 8 14 8H4Z" clip-rule="evenodd"/></svg>',
                    'Cut selected nodes': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M16.6857 1.03589C16.9421 1.13845 17.0668 1.42944 16.9642 1.68583L12.5385 12.7501L14.2479 17.0235C14.859 15.2635 16.5319 14.0001 18.5 14.0001C20.9853 14.0001 23 16.0149 23 18.5001C23 20.9854 20.9853 23.0001 18.5 23.0001C16.6466 23.0001 15.0549 21.8797 14.3653 20.2791C14.2141 19.928 14.0996 19.5624 13.9851 19.1967C13.8862 18.8807 13.7873 18.5647 13.6646 18.258L12 14.0964L10.3354 18.258C10.2127 18.5647 10.1138 18.8807 10.0149 19.1966C9.9004 19.5624 9.78593 19.928 9.63467 20.2791C8.9451 21.8797 7.3534 23.0001 5.5 23.0001C3.01472 23.0001 1 20.9854 1 18.5001C1 16.0149 3.01472 14.0001 5.5 14.0001C7.46805 14.0001 9.14103 15.2635 9.75213 17.0235L11.4615 12.7501L7.03576 1.68583C6.93321 1.42944 7.05791 1.13845 7.3143 1.03589C7.5707 0.933338 7.86168 1.05805 7.96424 1.31444L12 11.4038L16.0358 1.31444C16.1383 1.05805 16.4293 0.933338 16.6857 1.03589ZM9 18.5001C9 20.4331 7.433 22.0001 5.5 22.0001C3.567 22.0001 2 20.4331 2 18.5001C2 16.5671 3.567 15.0001 5.5 15.0001C7.433 15.0001 9 16.5671 9 18.5001ZM18.5 22.0001C20.433 22.0001 22 20.4331 22 18.5001C22 16.5671 20.433 15.0001 18.5 15.0001C16.567 15.0001 15 16.5671 15 18.5001C15 20.4331 16.567 22.0001 18.5 22.0001Z" clip-rule="evenodd"/></svg>',
                    'Redo': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M12 2C6.47715 2 2 6.47715 2 12C2 12.1598 2.00374 12.3187 2.01115 12.4766C2.02408 12.7524 1.81095 12.9865 1.53511 12.9995C1.25927 13.0124 1.02518 12.7993 1.01224 12.5234C1.00411 12.3499 1 12.1754 1 12C1 5.92487 5.92487 1 12 1C15.721 1 19.0098 2.8476 21.0001 5.67411L21 1.5C21 1.22386 21.2239 1 21.5 1C21.7761 1 22 1.22386 22 1.5V7.5C22 7.77614 21.7761 8 21.5 8H15.5C15.2239 8 15 7.77614 15 7.5C15 7.22386 15.2239 7 15.5 7L20.6623 7.00003C18.9328 4.01021 15.7007 2 12 2ZM22.4649 11.0006C22.7408 10.9876 22.9749 11.2008 22.9878 11.4766C22.9959 11.6501 23.0001 11.8246 23.0001 12C23.0001 18.0751 18.0752 23 12.0001 23C8.27906 23 4.99031 21.1524 3 18.3259V22.5C3 22.7762 2.77614 23 2.5 23C2.22386 23 2 22.7762 2 22.5V16.5C2 16.2239 2.22386 16 2.5 16H8.5C8.77614 16 9 16.2239 9 16.5C9 16.7762 8.77614 17 8.5 17H3.33776C5.06731 19.9898 8.29935 22 12.0001 22C17.5229 22 22.0001 17.5229 22.0001 12C22.0001 11.8402 21.9963 11.6813 21.9889 11.5234C21.976 11.2476 22.1891 11.0135 22.4649 11.0006Z" clip-rule="evenodd"/></svg>', 
                    'Undo': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M12 23C18.0751 23 23 18.0751 23 12C23 5.92487 18.0751 1 12 1C5.92487 1 1 5.92487 1 12C1 18.0751 5.92487 23 12 23ZM22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12ZM7.14645 16.8536C6.95118 16.6583 6.95118 16.3417 7.14645 16.1464L11.2929 12L7.14645 7.85355C6.95118 7.65829 6.95118 7.34171 7.14645 7.14645C7.34171 6.95118 7.65829 6.95118 7.85355 7.14645L12 11.2929L16.1464 7.14645C16.3417 6.95118 16.6583 6.95118 16.8536 7.14645C17.0488 7.34171 17.0488 7.65829 16.8536 7.85355L12.7071 12L16.8536 16.1464C17.0488 16.3417 17.0488 16.6583 16.8536 16.8536C16.6583 17.0488 16.3417 17.0488 16.1464 16.8536L12 12.7071L7.85355 16.8536C7.65829 17.0488 7.34171 17.0488 7.14645 16.8536Z" clip-rule="evenodd"/></svg>',
                    'Node': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M23 5C23 7.20914 21.2091 9 19 9C17.6131 9 16.3911 8.29421 15.6736 7.22223L8.77424 10.6719C8.92046 11.0875 9 11.5344 9 12C9 12.4656 8.92046 12.9125 8.77424 13.3281L15.6736 16.7778C16.3911 15.7058 17.6132 15 19 15C21.2091 15 23 16.7909 23 19C23 21.2091 21.2091 23 19 23C16.7909 23 15 21.2091 15 19C15 18.5344 15.0795 18.0875 15.2258 17.6719L8.32642 14.2222C7.60885 15.2942 6.38685 16 5 16C2.79086 16 1 14.2091 1 12C1 9.79086 2.79086 8 5 8C6.38685 8 7.60885 8.70579 8.32642 9.77777L15.2258 6.3281C15.0795 5.91254 15 5.46556 15 5C15 2.79086 16.7909 1 19 1C21.2091 1 23 2.79086 23 5ZM19 8C20.6569 8 22 6.65685 22 5C22 3.34315 20.6569 2 19 2C17.3431 2 16 3.34315 16 5C16 6.65685 17.3431 8 19 8ZM19 22C20.6569 22 22 20.6569 22 19C22 17.3431 20.6569 16 19 16C17.3431 16 16 17.3431 16 19C16 20.6569 17.3431 22 19 22ZM8 12C8 13.6569 6.65685 15 5 15C3.34315 15 2 13.6569 2 12C2 10.3431 3.34315 9 5 9C6.65685 9 8 10.3431 8 12Z" clip-rule="evenodd"/></svg>',
                    'Junction': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M12 23C18.0751 23 23 18.0751 23 12C23 5.92487 18.0751 1 12 1C5.92487 1 1 5.92487 1 12C1 18.0751 5.92487 23 12 23ZM22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12ZM17.8536 8.85355C18.0488 8.65829 18.0488 8.34171 17.8536 8.14645C17.6583 7.95118 17.3417 7.95118 17.1464 8.14645L11 14.2929L7.85355 11.1464C7.65829 10.9512 7.34171 10.9512 7.14645 11.1464C6.95118 11.3417 6.95118 11.6583 7.14645 11.8536L10.6464 15.3536C10.7402 15.4473 10.8674 15.5 11 15.5C11.1326 15.5 11.2598 15.4473 11.3535 15.3536L17.8536 8.85355Z" clip-rule="evenodd"/></svg>', 
                    'Link Nodes': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M13 4C13 2.89543 12.1046 2 11 2H4C2.89543 2 2 2.89543 2 4V20C2 21.1046 2.89543 22 4 22H11C12.1046 22 13 21.1046 13 20V15.5C13 15.2239 13.2239 15 13.5 15C13.7761 15 14 15.2239 14 15.5V20C14 21.6569 12.6569 23 11 23H4C2.34315 23 1 21.6569 1 20V4C1 2.34315 2.34315 1 4 1H11C12.6569 1 14 2.34315 14 4V8.5C14 8.77614 13.7761 9 13.5 9C13.2239 9 13 8.77614 13 8.5V4ZM22.8536 12.3536L17.8536 17.3535C17.6584 17.5488 17.3418 17.5488 17.1465 17.3536C16.9512 17.1583 16.9512 16.8417 17.1465 16.6464L21.2929 12.5H6.5C6.22386 12.5 6 12.2761 6 12C6 11.7239 6.22386 11.5 6.5 11.5H21.2929L17.1465 7.35355C16.9512 7.15829 16.9512 6.84171 17.1465 6.64644C17.3418 6.45118 17.6584 6.45119 17.8536 6.64645L22.8536 11.6464C23.0488 11.8417 23.0488 12.1583 22.8536 12.3536Z" clip-rule="evenodd"/></svg>',
                    'Group': '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" class="menu-list-icon" fill="none" viewBox="0 0 24 24"><path fill="#000" fill-rule="evenodd" d="M7 1.5C7 1.22386 6.77614 1 6.5 1C6.22386 1 6 1.22386 6 1.5V3H4C2.34315 3 1 4.34315 1 6V20C1 21.6569 2.34315 23 4 23H20C21.6569 23 23 21.6569 23 20V6C23 4.34315 21.6569 3 20 3H18V1.5C18 1.22386 17.7761 1 17.5 1C17.2239 1 17 1.22386 17 1.5V3H7V1.5ZM2 6C2 4.89543 2.89543 4 4 4H20C21.1046 4 22 4.89543 22 6V20C22 21.1046 21.1046 22 20 22H4C2.89543 22 2 21.1046 2 20V6ZM7 10.5C7 10.7761 6.77614 11 6.5 11C6.22386 11 6 10.7761 6 10.5C6 10.2239 6.22386 10 6.5 10C6.77614 10 7 10.2239 7 10.5ZM8 10.5C8 11.3284 7.32843 12 6.5 12C5.67157 12 5 11.3284 5 10.5C5 9.67157 5.67157 9 6.5 9C7.32843 9 8 9.67157 8 10.5ZM6.5 17C6.77614 17 7 16.7761 7 16.5C7 16.2239 6.77614 16 6.5 16C6.22386 16 6 16.2239 6 16.5C6 16.7761 6.22386 17 6.5 17ZM6.5 18C7.32843 18 8 17.3284 8 16.5C8 15.6716 7.32843 15 6.5 15C5.67157 15 5 15.6716 5 16.5C5 17.3284 5.67157 18 6.5 18ZM12.5 10.5C12.5 10.7761 12.2761 11 12 11C11.7239 11 11.5 10.7761 11.5 10.5C11.5 10.2239 11.7239 10 12 10C12.2761 10 12.5 10.2239 12.5 10.5ZM13.5 10.5C13.5 11.3284 12.8284 12 12 12C11.1716 12 10.5 11.3284 10.5 10.5C10.5 9.67157 11.1716 9 12 9C12.8284 9 13.5 9.67157 13.5 10.5ZM12 17C12.2761 17 12.5 16.7761 12.5 16.5C12.5 16.2239 12.2761 16 12 16C11.7239 16 11.5 16.2239 11.5 16.5C11.5 16.7761 11.7239 17 12 17ZM12 18C12.8284 18 13.5 17.3284 13.5 16.5C13.5 15.6716 12.8284 15 12 15C11.1716 15 10.5 15.6716 10.5 16.5C10.5 17.3284 11.1716 18 12 18ZM18 10.5C18 10.7761 17.7761 11 17.5 11C17.2239 11 17 10.7761 17 10.5C17 10.2239 17.2239 10 17.5 10C17.7761 10 18 10.2239 18 10.5ZM19 10.5C19 11.3284 18.3284 12 17.5 12C16.6716 12 16 11.3284 16 10.5C16 9.67157 16.6716 9 17.5 9C18.3284 9 19 9.67157 19 10.5Z" clip-rule="evenodd"/></svg>',
                };
                
                var svgPath = labelToSvgPath[label];
                if (svgPath) {
                    linkContent += svgPath + '<span class="label">' + label + '</span>';
                    
                } else {
                    linkContent += '<span class="red-ui-menu-label"><span>'+label+'</span></span>'
                }
            }
            
            linkContent += '</a>';

            var link = $(linkContent).appendTo(item);
            opt.link = link;
            if (typeof opt.onselect === 'string' || opt.shortcut) {
                var shortcut = opt.shortcut || RED.keyboard.getShortcut(opt.onselect);
                if (shortcut && shortcut.key) {
                    opt.shortcutSpan = $('<span class="red-ui-popover-key">'+RED.keyboard.formatKey(shortcut.key, true)+'</span>').appendTo(link.find(".red-ui-menu-label"));
                }
            }

            menuItems[opt.id] = opt;

            if (opt.onselect) {
                link.on("click", function(e) {
                    e.preventDefault();
                    if ($(this).parent().hasClass("disabled")) {
                        return;
                    }
                    if (opt.toggle) {
                        if (opt.toggle === true) {
                            setSelected(opt.id, !isSelected(opt.id));
                        } else {
                            setSelected(opt.id, true);
                        }
                    } else {
                        triggerAction(opt.id);
                    }
                });
                if (opt.toggle) {
                    setInitialState();
                }
            } else if (opt.href) {
                link.attr("target","_blank").attr("href",opt.href);
            } else if (!opt.options) {
                item.addClass("disabled");
                link.on("click", function(event) {
                    event.preventDefault();
                });
            }
            if (opt.options) {
                item.addClass("red-ui-menu-dropdown-submenu"+(opt.direction!=='right'?" pull-left":""));
                var submenu = $('<ul id="'+opt.id+'-submenu" class="red-ui-menu-dropdown"></ul>').appendTo(item);
                var hasIcons = false
                var hasSubmenus = false

                for (var i=0;i<opt.options.length;i++) {

                    if (opt.options[i]) {
                        if (opt.onpreselect && opt.options[i].onpreselect === undefined) {
                            opt.options[i].onpreselect = opt.onpreselect
                        }
                        if (opt.onpostselect && opt.options[i].onpostselect === undefined) {
                            opt.options[i].onpostselect = opt.onpostselect
                        }
                        opt.options[i].direction = opt.direction
                        hasIcons = hasIcons || (opt.options[i].icon);
                        hasSubmenus = hasSubmenus || (opt.options[i].options);
                    }

                    var li = createMenuItem(opt.options[i]);
                    if (li) {
                        li.appendTo(submenu);
                    }
                }
                if (!hasIcons) {
                    submenu.addClass("red-ui-menu-dropdown-noicons")
                }
                if (hasSubmenus) {
                    submenu.addClass("red-ui-menu-dropdown-submenus")
                }


            }
            if (opt.disabled) {
                item.addClass("disabled");
            }
            if (opt.visible === false) {
                item.addClass("hide");
            }
        }


        return item;

    }
    function createMenu(options) {
        var topMenu = $("<ul/>",{class:"red-ui-menu red-ui-menu-dropdown pull-right"});
        if (options.direction) {
            topMenu.addClass("red-ui-menu-dropdown-direction-"+options.direction)
        }
        if (options.id) {
            topMenu.attr({id:options.id+"-submenu"});
            var menuParent = $("#"+options.id);
            if (menuParent.length === 1) {
                topMenu.insertAfter(menuParent);
                menuParent.on("click", function(evt) {
                    evt.stopPropagation();
                    evt.preventDefault();
                    if (topMenu.is(":visible")) {
                        $(document).off("click.red-ui-menu");
                        topMenu.hide();
                    } else {
                        $(document).on("click.red-ui-menu", function(evt) {
                            $(document).off("click.red-ui-menu");
                            activeMenu = null;
                            topMenu.hide();
                        });
                        $(".red-ui-menu.red-ui-menu-dropdown").hide();
                        topMenu.show();
                    }
                })
            }
        }

        var lastAddedSeparator = false;
        var hasSubmenus = false;
        var hasIcons = false;
        for (var i=0;i<options.options.length;i++) {
            var opt = options.options[i];
            if (opt) {
                if (options.onpreselect && opt.onpreselect === undefined) {
                    opt.onpreselect = options.onpreselect
                }
                if (options.onpostselect && opt.onpostselect === undefined) {
                    opt.onpostselect = options.onpostselect
                }
                opt.direction = options.direction || 'left'
            }
            if (opt !== null || !lastAddedSeparator) {
                hasIcons = hasIcons || (opt && opt.icon);
                hasSubmenus = hasSubmenus || (opt && opt.options);
                var li = createMenuItem(opt);
                if (li) {
                    li.appendTo(topMenu);
                    lastAddedSeparator = (opt === null);
                }
            }
        }
        if (!hasIcons) {
            topMenu.addClass("red-ui-menu-dropdown-noicons")
        }
        if (hasSubmenus) {
            topMenu.addClass("red-ui-menu-dropdown-submenus")
        }
        return topMenu;
    }

    function triggerAction(id, args) {
        var opt = menuItems[id];
        var callback = opt.onselect;
        if (opt.onpreselect) {
            opt.onpreselect.call(opt,args)
        }
        if (typeof opt.onselect === 'string') {
            callback = RED.actions.get(opt.onselect);
        }
        if (callback) {
            callback.call(opt,args);
        } else {
            console.log("No callback for",id,opt.onselect);
        }
        if (opt.onpostselect) {
            opt.onpostselect.call(opt,args)
        }
    }

    function isSelected(id) {
        return $("#" + id).hasClass("active");
    }

    function setSelected(id,state) {
        var alreadySet = false;
        if (isSelected(id) == state) {
            alreadySet = true;
        }
        var opt = menuItems[id];
        if (state) {
            $("#"+id).addClass("active");
        } else {
            $("#"+id).removeClass("active");
        }
        if (opt) {
            if (opt.toggle && typeof opt.toggle === "string") {
                if (state) {
                    for (var m in menuItems) {
                        if (menuItems.hasOwnProperty(m)) {
                            var mi = menuItems[m];
                            if (mi.id != opt.id && opt.toggle == mi.toggle) {
                                setSelected(mi.id,false);
                            }
                        }
                    }
                }
            }
            if (!alreadySet && opt.onselect) {
                triggerAction(opt.id,state);
            }
            if (!opt.local && !alreadySet) {
                RED.settings.set(opt.setting||("menu-"+opt.id), state);
            }
        }
    }

    function toggleSelected(id) {
        setSelected(id,!isSelected(id));
    }

    function setDisabled(id,state) {
        if (state) {
            $("#"+id).parent().addClass("disabled");
        } else {
            $("#"+id).parent().removeClass("disabled");
        }
    }

    function setVisible(id,state) {
        if (!state) {
            $("#"+id).parent().addClass("hide");
        } else {
            $("#"+id).parent().removeClass("hide");
        }
    }

    function addItem(id,opt) {
        var item = createMenuItem(opt);
        if (opt !== null && opt.group) {
            var groupItems = $("#"+id+"-submenu").children(".red-ui-menu-group-"+opt.group);
            if (groupItems.length === 0) {
                item.appendTo("#"+id+"-submenu");
            } else {
                for (var i=0;i<groupItems.length;i++) {
                    var groupItem = groupItems[i];
                    var label = $(groupItem).find(".red-ui-menu-label").html();
                    if (opt.label < label) {
                        $(groupItem).before(item);
                        break;
                    }
                }
                if (i === groupItems.length) {
                    item.appendTo("#"+id+"-submenu");
                }
            }
        } else {
            item.appendTo("#"+id+"-submenu");
        }
    }
    function removeItem(id) {
        $("#"+id).parent().remove();
    }

    function setAction(id,action) {
        var opt = menuItems[id];
        if (opt) {
            opt.onselect = action;
        }
    }

    function refreshShortcuts() {
        for (var id in menuItems) {
            if (menuItems.hasOwnProperty(id)) {
                var opt = menuItems[id];
                if (typeof opt.onselect === "string" && opt.shortcutSpan) {
                    opt.shortcutSpan.remove();
                    delete opt.shortcutSpan;
                    var shortcut = RED.keyboard.getShortcut(opt.onselect);
                    if (shortcut && shortcut.key) {
                        opt.shortcutSpan = $('<span class="red-ui-popover-key">'+RED.keyboard.formatKey(shortcut.key, true)+'</span>').appendTo(opt.link.find(".red-ui-menu-label"));
                    }
                }
            }
        }
    }

    return {
        init: createMenu,
        setSelected: setSelected,
        isSelected: isSelected,
        toggleSelected: toggleSelected,
        setDisabled: setDisabled,
        setVisible: setVisible,
        addItem: addItem,
        removeItem: removeItem,
        setAction: setAction,
        refreshShortcuts: refreshShortcuts
    }
})();
